[{"path":"https://traitecoevo.github.io/APCalign/articles/APCalign.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"APCalign","text":"‘APCalign’ currently CRAN. can install current developmental version using demonstrate use ‘APCalign’, use example dataset gbif_lite documented ?gbif_lite","code":"# install.packages(\"remotes\") remotes::install_github(\"traitecoevo/APCalign\")  library(APCalign) dim(gbif_lite) #> [1] 129   7  gbif_lite |> print(n = 6) #> # A tibble: 129 × 7 #>   species              infraspecificepithet taxonrank decimalLongitude decimalLatitude scientificname #>   <chr>                <chr>                <chr>                <dbl>           <dbl> <chr>          #> 1 Tetratheca ciliata   <NA>                 SPECIES               145.           -37.4 Tetratheca ci… #> 2 Peganum harmala      <NA>                 SPECIES               139.           -33.3 Peganum harma… #> 3 Calotis multicaulis  <NA>                 SPECIES               115.           -24.3 Calotis multi… #> 4 Leptospermum triner… <NA>                 SPECIES               151.           -34.0 Leptospermum … #> 5 Lepidosperma latera… <NA>                 SPECIES               142.           -37.3 Lepidosperma … #> 6 Enneapogon polyphyl… <NA>                 SPECIES               129.           -17.8 Enneapogon po… #> # ℹ 123 more rows #> # ℹ 1 more variable: verbatimscientificname <chr>"},{"path":"https://traitecoevo.github.io/APCalign/articles/APCalign.html","id":"retrieve-taxonomic-resources","dir":"Articles","previous_headings":"","what":"Retrieve taxonomic resources","title":"APCalign","text":"first step retrieve entire APC APNI name databases store locally taxonomic resources. achieve using load_taxonomic_resources(). two versions databases can retrieve stable_or_current_data argument. Calling: stable retrieve recent, archived version databases GitHub releases. set default option. current retrieve --date databases directly APC APNI website. Note databases quite large initial retrieval stable versions take minutes. taxonomic resources stored locally, subsequent retrievals take less time. Retrieving current resources always take longer since . Check Resource Caching article learn APC APNIC databases accessed, stored retrieved. reproducible workflow, recommend specifying exact stable version want use.","code":"# Benchmarking the retrieval of `stable` or `current` resources stable_start_time <- Sys.time() stable_resources <- load_taxonomic_resources(stable_or_current_data = \"stable\") #> Loading resources......done stable_end_time <-  Sys.time()  current_start_time <- Sys.time() current_resources <- load_taxonomic_resources(stable_or_current_data = \"current\") #> Loading resources......done current_end_time <-  Sys.time()  # Compare times stable_end_time - stable_start_time #> Time difference of 26.66634 secs current_end_time - current_start_time #> Time difference of 54.33515 secs resources <- load_taxonomic_resources(stable_or_current_data = \"stable\", version = \"0.0.2.9000\") #> Loading resources......done"},{"path":"https://traitecoevo.github.io/APCalign/articles/APCalign.html","id":"standardise-plant-taxon-names","dir":"Articles","previous_headings":"","what":"Standardise plant taxon names","title":"APCalign","text":"Now can query taxonomic names taxonomic resources just retrieved using create_taxonomic_update_lookup(). --one function : Align taxonomic names APNI APC using fuzzy matching algorithm Update taxonomic names APC accepted name. Returns NA names match found like learn step, take look section Closer look name standardisation ‘APCalign’ original_name taxon name used original data. aligned_name taxon name used link APC identify synonyms. apc_name currently, accepted taxon name used Australian Plant Census. recommend joining output create_taxonomic_update_lookup() back original data names","code":"library(dplyr) library(tidyr)  update_gbif_names <- gbif_lite |>    pull(species) |>    create_taxonomic_update_lookup(resources = resources) #> Checking alignments of 121 taxa #>   -> 0 names already matched; 0 names checked but without a match; 121 taxa yet to be checked  update_gbif_names |> print(n = 6) #> # A tibble: 146 × 5 #>   original_name           aligned_name            apc_name      aligned_reason taxonomic_status_of_…¹ #>   <chr>                   <chr>                   <chr>         <chr>          <chr>                  #> 1 Tetratheca ciliata      Tetratheca ciliata      Tetratheca c… match_06. Aut… accepted               #> 2 Peganum harmala         Peganum harmala         Peganum harm… match_06. Aut… accepted               #> 3 Calotis multicaulis     Calotis multicaulis     Calotis mult… match_06. Aut… accepted               #> 4 Calotis multicaulis     Calotis multicaulis     Calotis plum… match_06. Aut… pro parte misapplied   #> 5 Leptospermum trinervium Leptospermum trinervium Leptospermum… match_06. Aut… accepted               #> 6 Lepidosperma laterale   Lepidosperma laterale   Lepidosperma… match_06. Aut… accepted               #> # ℹ 140 more rows #> # ℹ abbreviated name: ¹​taxonomic_status_of_aligned_name gbif_lite |>  left_join(update_gbif_names,  # Left joining updated taxon names back to original data            by = join_by(species == original_name)) |>    select(species, ends_with(\"name\"), # Rearranging naming columns          aligned_reason, infraspecificepithet:decimalLatitude) |>    print(n = 6) #> # A tibble: 154 × 11 #>   species          scientificname verbatimscientificname aligned_name apc_name taxonomic_status_of_…¹ #>   <chr>            <chr>          <chr>                  <chr>        <chr>    <chr>                  #> 1 Tetratheca cili… Tetratheca ci… Tetratheca ciliata     Tetratheca … Tetrath… accepted               #> 2 Peganum harmala  Peganum harma… Peganum harmala        Peganum har… Peganum… accepted               #> 3 Calotis multica… Calotis multi… Calotis multicaulis    Calotis mul… Calotis… accepted               #> 4 Calotis multica… Calotis multi… Calotis multicaulis    Calotis mul… Calotis… pro parte misapplied   #> 5 Leptospermum tr… Leptospermum … Leptospermum trinervi… Leptospermu… Leptosp… accepted               #> 6 Lepidosperma la… Lepidosperma … Lepidosperma laterale  Lepidosperm… Lepidos… accepted               #> # ℹ 148 more rows #> # ℹ abbreviated name: ¹​taxonomic_status_of_aligned_name #> # ℹ 5 more variables: aligned_reason <chr>, infraspecificepithet <chr>, taxonrank <chr>, #> #   decimalLongitude <dbl>, decimalLatitude <dbl>"},{"path":"https://traitecoevo.github.io/APCalign/articles/APCalign.html","id":"plant-established-status-across-statesterritories","dir":"Articles","previous_headings":"","what":"Plant established status across states/territories","title":"APCalign","text":"‘APCalign’ can also provide state/territory distribution established status (native/introduced) APC. can access established status data state/territory using create_species_state_origin_matrix() breakdown possible values origin can also obtain breakdown species established status particular state/territory using state_diversity_counts() Using established status data state/territory information, can check plant taxa native using native_anywhere_in_australia()","code":"# Retrieve status data by state/territory  status_matrix <- create_species_state_origin_matrix(resources = resources)  status_matrix |> print(n = 6) #> # A tibble: 26,243 × 19 #>   species   NT    Qld   WA    ChI   NSW   SA    Vic   Tas   ACT   NI    LHI   MI    HI    MDI   CoI   #>   <chr>     <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> #> 1 Cycas an… nati… nati… not … not … not … not … not … not … not … not … not … not … not … not … not … #> 2 Cycas ar… nati… not … not … not … not … not … not … not … not … not … not … not … not … not … not … #> 3 Cycas ar… nati… not … not … not … not … not … not … not … not … not … not … not … not … not … not … #> 4 Cycas ar… nati… not … not … not … not … not … not … not … not … not … not … not … not … not … not … #> 5 Cycas ba… not … nati… not … not … not … not … not … not … not … not … not … not … not … not … not … #> 6 Cycas ba… not … not … nati… not … not … not … not … not … not … not … not … not … not … not … not … #> # ℹ 26,237 more rows #> # ℹ 3 more variables: CSI <chr>, AR <chr>, CaI <chr> library(purrr) library(janitor)  # Obtain unique values status_matrix |>    select(-species) |>    flatten_chr() |>    tabyl() #>  flatten_chr(select(status_matrix, -species))      n      percent #>                        doubtfully naturalised   1120 2.371003e-03 #>                          formerly naturalised    277 5.863998e-04 #>                                        native  40336 8.538997e-02 #>             native and doubtfully naturalised      9 1.905270e-05 #>                        native and naturalised    136 2.879075e-04 #>                   native and uncertain origin      2 4.233933e-06 #>                                   naturalised   8765 1.855521e-02 #>                                   not present 421606 8.925258e-01 #>                              presumed extinct    101 2.138136e-04 #>                              uncertain origin     22 4.657327e-05 state_diversity_counts(\"NSW\", resources = resources) #> # A tibble: 7 × 3 #>   origin                            state num_species #>   <chr>                             <chr> <table[1d]> #> 1 doubtfully naturalised            NSW     93        #> 2 formerly naturalised              NSW      8        #> 3 native                            NSW   5958        #> 4 native and doubtfully naturalised NSW      2        #> 5 native and naturalised            NSW     34        #> 6 naturalised                       NSW   1580        #> 7 presumed extinct                  NSW      8 update_gbif_names |>    sample_n(1) |>  # Choosing a random species   pull(apc_name) |> # Extracting this APC accepted name   native_anywhere_in_australia(resources = resources)  #> # A tibble: 1 × 2 #>   species             native_anywhere_in_aus                #>   <chr>               <chr>                                 #> 1 Hibbertia australis considered native to Australia by APC"},{"path":"https://traitecoevo.github.io/APCalign/articles/APCalign.html","id":"closer-look","dir":"Articles","previous_headings":"","what":"Closer look at name standardisation with ‘APCalign’","title":"APCalign","text":"create_taxonomic_update_lookup simple, wrapper, function novice users want quickly check standardise taxon names. experienced users, can take look sub functions align_taxa() update_taxonomy() see taxon names processed, aligned updated.","code":""},{"path":"https://traitecoevo.github.io/APCalign/articles/APCalign.html","id":"aligning-names-to-apni-and-apc","dir":"Articles","previous_headings":"Closer look at name standardisation with ‘APCalign’","what":"Aligning names to APNI and APC","title":"APCalign","text":"function : Clean taxonomic names Find best alignment APNI taxonomic name using fuzzy matching algorithm can control degree fuzzy matching using arguments max_distance_abs max_distance_rel Note aligned_name may current. best possible effort match phrase names subspecific taxa often alternative formatting. function also searches small spelling gender mistakes. every aligned_name, align_taxa() provide aligned_reason can review table counts:","code":"library(dplyr) library(tidyr)  aligned_gbif_taxa <- gbif_lite |>    drop_na(species) |>     pull(species) |>    align_taxa(resources = resources) #> Checking alignments of 121 taxa #>   -> 0 names already matched; 0 names checked but without a match; 121 taxa yet to be checked  aligned_gbif_taxa |> print(n = 6) #> # A tibble: 121 × 28 #>   original_name cleaned_name aligned_name source known checked stripped_name stripped_name2 trinomial #>   <chr>         <chr>        <chr>        <chr>  <lgl> <lgl>   <chr>         <chr>          <chr>     #> 1 Tetratheca c… Tetratheca … Tetratheca … <NA>   TRUE  TRUE    tetratheca c… tetratheca ci… <NA>      #> 2 Peganum harm… Peganum har… Peganum har… <NA>   TRUE  TRUE    peganum harm… peganum harma… <NA>      #> 3 Calotis mult… Calotis mul… Calotis mul… <NA>   TRUE  TRUE    calotis mult… calotis multi… <NA>      #> 4 Leptospermum… Leptospermu… Leptospermu… <NA>   TRUE  TRUE    leptospermum… leptospermum … <NA>      #> 5 Lepidosperma… Lepidosperm… Lepidosperm… <NA>   TRUE  TRUE    lepidosperma… lepidosperma … <NA>      #> 6 Enneapogon p… Enneapogon … Enneapogon … <NA>   TRUE  TRUE    enneapogon p… enneapogon po… <NA>      #> # ℹ 115 more rows #> # ℹ 19 more variables: binomial <chr>, genus <chr>, aligned_reason <chr>, fuzzy_match_genus <chr>, #> #   fuzzy_match_genus_known <chr>, fuzzy_match_genus_APNI <chr>, fuzzy_match_binomial <chr>, #> #   fuzzy_match_binomial_APC_known <chr>, fuzzy_match_trinomial <chr>, #> #   fuzzy_match_trinomial_known <chr>, fuzzy_match_cleaned_APC <chr>, #> #   fuzzy_match_cleaned_APC_known <chr>, fuzzy_match_cleaned_APNI <chr>, #> #   fuzzy_match_cleaned_APC_imprecise <chr>, fuzzy_match_cleaned_APC_known_imprecise <chr>, … library(janitor)  aligned_gbif_taxa |>    pull(aligned_reason) |>    tabyl() |>    tibble()  #> # A tibble: 5 × 3 #>   `pull(aligned_gbif_taxa, aligned_reason)`                                                 n percent #>   <chr>                                                                                 <int>   <dbl> #> 1 match_06. Automatic alignment with accepted canonical names in APC (2023-08-09)         112 0.926   #> 2 match_06. Automatic alignment with synonymous term among known canonical names APC (…     6 0.0496  #> 3 match_08. Automatic alignment with synonymous name in APNI (2023-08-09)                   1 0.00826 #> 4 match_14. Automatic alignment with species-level canonical name in APC accepted when…     1 0.00826 #> 5 match_20. Rewording name to be recognised as genus rank, with genus accepted by APC …     1 0.00826"},{"path":"https://traitecoevo.github.io/APCalign/articles/APCalign.html","id":"update-taxonomic-names-to-alignments","dir":"Articles","previous_headings":"Closer look at name standardisation with ‘APCalign’","what":"Update taxonomic names to alignments","title":"APCalign","text":"update_taxonomy() update APNI taxa specified (current) version APC. use general synonymy published APC attempt sync taxon names specific list. function also add relevant taxonomy columns output","code":"updated_gbif_taxa <- aligned_gbif_taxa |>    pull(aligned_name) |>    update_taxonomy(resources = resources)  updated_gbif_taxa |> print(n = 6) #> # A tibble: 148 × 14 #>   aligned_name    source taxonIDClean taxonomicStatusClean alternativeTaxonomic…¹ acceptedNameUsageID #>   <chr>           <chr>  <chr>        <chr>                <chr>                  <chr>               #> 1 Acacia aneura   APC    https://id.… accepted             misapplied | pro part… https://id.biodive… #> 2 Acacia aneura   APC    https://id.… pro parte misapplied misapplied | pro part… https://id.biodive… #> 3 Acacia aneura   APC    https://id.… pro parte misapplied misapplied | pro part… https://id.biodive… #> 4 Acacia flavesc… APC    https://id.… accepted             <NA>                   https://id.biodive… #> 5 Acacia gladiif… APC    https://id.… accepted             misapplied             https://id.biodive… #> 6 Acacia melanox… APC    https://id.… accepted             misapplied             https://id.biodive… #> # ℹ 142 more rows #> # ℹ abbreviated name: ¹​alternativeTaxonomicStatusClean #> # ℹ 8 more variables: canonicalName <chr>, scientificNameAuthorship <chr>, taxonRank <chr>, #> #   taxonomicStatus <chr>, family <chr>, subclass <chr>, taxonDistribution <chr>, #> #   ccAttributionIRI <chr>"},{"path":"https://traitecoevo.github.io/APCalign/articles/data-providers.html","id":"australian-plant-cenus-apc","dir":"Articles","previous_headings":"","what":"Australian Plant Cenus (APC)","title":"Data Providers","text":"Australian Plant Cenus (APC) national database accepted taxonomic names Australian vascular plants. APC includes information synonyms, misapplications , well established status (native/introduced) distribution across states territories. ‘APCalign’ first use APC align taxonomic names ones exist database.","code":""},{"path":"https://traitecoevo.github.io/APCalign/articles/data-providers.html","id":"australian-plant-index-apni","dir":"Articles","previous_headings":"","what":"Australian Plant Index (APNI)","title":"Data Providers","text":"Australian Plant Index (APNI) database containing names Australian plants use scientific literature. primarily used botanical community standardising synonyms. Importantly, APNI provide recommendation taxonomy nomenclature, APC comes . ‘APCalign’ uses APNI alignment found APC.","code":""},{"path":"https://traitecoevo.github.io/APCalign/articles/data-providers.html","id":"data-standards-and-meta-data","dir":"Articles","previous_headings":"","what":"Data standards and meta-data","title":"Data Providers","text":"Data APNI APC formatted according Darwin Core standard, widely used format many databases. can find meta-data APC APNI : Meta-data APC output Meta-data APNI output details APNI APC, recommend taking read extensive documentation.","code":""},{"path":"https://traitecoevo.github.io/APCalign/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Daniel Falster. Author, maintainer, copyright holder. Elizabeth Wenk. Author, contributor. Cornwell. Author, contributor. Fonti Kar. Author, contributor. Carl Boettiger. Contributor.","code":""},{"path":"https://traitecoevo.github.io/APCalign/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Falster D, Wenk E, Cornwell W, Kar F (2023). APCalign: Standardising Taxon Names Using Australian Plant Cenus. R package version 0.1.1, https://traitecoevo.github.io/APCalign/.","code":"@Manual{,   title = {APCalign: Standardising Taxon Names Using The Australian Plant Cenus},   author = {Daniel Falster and Elizabeth Wenk and Will Cornwell and Fonti Kar},   year = {2023},   note = {R package version 0.1.1},   url = {https://traitecoevo.github.io/APCalign/}, }"},{"path":"https://traitecoevo.github.io/APCalign/index.html","id":"apcalign-","dir":"","previous_headings":"","what":"Standardising Taxon Names Using The Australian Plant Cenus","title":"Standardising Taxon Names Using The Australian Plant Cenus","text":"‘APCalign’ uses Australian Plant Census (APC) Australian Plant Name Index standardise Australian plant taxon names. ‘APCalign’ also supplies information established status plant taxa across different states/territories.","code":""},{"path":"https://traitecoevo.github.io/APCalign/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Standardising Taxon Names Using The Australian Plant Cenus","text":"‘APCalign’ current CRAN. Install currently development version:","code":"# install.packages(\"remotes\") # remotes::install_github(\"traitecoevo/APCalign\")  library(APCalign)"},{"path":"https://traitecoevo.github.io/APCalign/index.html","id":"a-quick-demo","dir":"","previous_headings":"","what":"A quick demo","title":"Standardising Taxon Names Using The Australian Plant Cenus","text":"Generating look-table can done just one function","code":"resources <- load_taxonomic_resources()  create_taxonomic_update_lookup(    taxa = c(     \"Banksia integrifolia\",     \"Acacia longifolia\",     \"Commersonia rosea\"     ),   resources = resources ) #> # A tibble: 3 × 5 #>   original_name      aligned_name apc_name aligned_reason taxonomic_status_of_…¹ #>   <chr>              <chr>        <chr>    <chr>          <chr>                  #> 1 Banksia integrifo… Banksia int… Banksia… match_06. Aut… accepted               #> 2 Acacia longifolia  Acacia long… Acacia … match_06. Aut… accepted               #> 3 Commersonia rosea  Commersonia… Androca… match_06. Aut… basionym               #> # ℹ abbreviated name: ¹​taxonomic_status_of_aligned_name"},{"path":"https://traitecoevo.github.io/APCalign/index.html","id":"learn-more","dir":"","previous_headings":"","what":"Learn more","title":"Standardising Taxon Names Using The Australian Plant Cenus","text":"Highly recommend looking Getting Started vignette learn use ‘APCalign’. can also learn taxa matching algorithim APC/APNI data cached behind--scenes.","code":""},{"path":"https://traitecoevo.github.io/APCalign/index.html","id":"found-a-bug","dir":"","previous_headings":"","what":"Found a bug?","title":"Standardising Taxon Names Using The Australian Plant Cenus","text":"come across unexpected taxon name change? Elusive error can’t debug - submit issue try best help","code":""},{"path":"https://traitecoevo.github.io/APCalign/index.html","id":"comments-and-contributions","dir":"","previous_headings":"","what":"Comments and contributions","title":"Standardising Taxon Names Using The Australian Plant Cenus","text":"welcome comments contributions package, start submit issue can take !","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/APCalign.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardising Taxonomic Names in Australian Plants — APCalign","title":"Standardising Taxonomic Names in Australian Plants — APCalign","text":"process standardising taxon names necessary working biodiversity data. 'APCalign' uses Australian Plant Name Index (APNI) Australian Plant Census (APC) align update plant taxon names current, accepted standards. 'APCalign' can also supply information established status plant taxa across different states/territories.","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/APCalign.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Standardising Taxonomic Names in Australian Plants — APCalign","text":"Standarise taxon names load_taxonomic_resources create_taxonomic_update_lookup align_taxa update_taxonomy Established status region state_diversity_counts create_species_state_origin_matrix native_anywhere_in_australia","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/APCalign.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Standardising Taxonomic Names in Australian Plants — APCalign","text":"questions, comments suggestions, please submit issue GitHub repository","code":""},{"path":[]},{"path":"https://traitecoevo.github.io/APCalign/reference/APCalign.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Standardising Taxonomic Names in Australian Plants — APCalign","text":"Maintainer: Daniel Falster daniel.falster@unsw.edu.au (ORCID) [copyright holder] Authors: Elizabeth Wenk e.wenk@unsw.edu.au (ORCID) [contributor] Cornwell w.cornwell@unsw.edu.au (ORCID) [contributor] Fonti Kar f.kar@unsw.edu.au (ORCID) [contributor] contributors: Carl Boettiger cboettig@gmail.com (ORCID) [contributor]","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/align_taxa.html","id":null,"dir":"Reference","previous_headings":"","what":"Find taxonomic alignments for a list of names to a version of the Australian Plant Census (APC) through standardizing formatting and checking for spelling issues — align_taxa","title":"Find taxonomic alignments for a list of names to a version of the Australian Plant Census (APC) through standardizing formatting and checking for spelling issues — align_taxa","text":"function uses Australian Plant Census (APC) & Australian Plant Name Index (APNI) find taxonomic alignments list names.","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/align_taxa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find taxonomic alignments for a list of names to a version of the Australian Plant Census (APC) through standardizing formatting and checking for spelling issues — align_taxa","text":"","code":"align_taxa(   original_name,   output = NULL,   resources = load_taxonomic_resources(),   fuzzy_abs_dist = 3,   fuzzy_rel_dist = 0.2,   fuzzy_matches = TRUE,   imprecise_fuzzy_matches = FALSE,   APNI_matches = FALSE,   identifier = NA )"},{"path":"https://traitecoevo.github.io/APCalign/reference/align_taxa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find taxonomic alignments for a list of names to a version of the Australian Plant Census (APC) through standardizing formatting and checking for spelling issues — align_taxa","text":"original_name list names query taxonomic alignments. output (optional) name file save results . resources taxonomic resources used align taxa names. Loading can slow, call load_taxonomic_resources separately greatly speed function pass resources . fuzzy_abs_dist number characters allowed different fuzzy match. fuzzy_rel_dist proportion characters allowed different fuzzy match. fuzzy_matches Fuzzy matches turned default. relative absolute distances allowed fuzzy matches species infraspecific taxon names defined parameters fuzzy_abs_dist fuzzy_rel_dist imprecise_fuzzy_matches Imprecise fuzzy matches turned default. APNI_matches Name matches APNI (Australian Plant Names Index) turned default. identifier dataset, location identifier, defaults NA.","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/align_taxa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find taxonomic alignments for a list of names to a version of the Australian Plant Census (APC) through standardizing formatting and checking for spelling issues — align_taxa","text":"tibble columns: original_name, cleaned_name, aligned_name, source, known, checked.","code":""},{"path":[]},{"path":"https://traitecoevo.github.io/APCalign/reference/align_taxa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find taxonomic alignments for a list of names to a version of the Australian Plant Census (APC) through standardizing formatting and checking for spelling issues — align_taxa","text":"","code":"align_taxa(c(\"Poa annua\", \"Abies alba\")) #> Checking alignments of 2 taxa #>   -> 0 names already matched; 0 names checked but without a match; 2 taxa yet to be checked #> Loading resources... #> ...done #> # A tibble: 2 × 28 #>   original_name cleaned_name aligned_name source known checked stripped_name #>   <chr>         <chr>        <chr>        <chr>  <lgl> <lgl>   <chr>         #> 1 Abies alba    Abies alba   NA           NA     FALSE FALSE   abies alba    #> 2 Poa annua     Poa annua    Poa annua    NA     TRUE  TRUE    poa annua     #> # ℹ 21 more variables: stripped_name2 <chr>, trinomial <chr>, binomial <chr>, #> #   genus <chr>, aligned_reason <chr>, fuzzy_match_genus <chr>, #> #   fuzzy_match_genus_known <chr>, fuzzy_match_genus_APNI <chr>, #> #   fuzzy_match_binomial <chr>, fuzzy_match_binomial_APC_known <chr>, #> #   fuzzy_match_trinomial <chr>, fuzzy_match_trinomial_known <chr>, #> #   fuzzy_match_cleaned_APC <chr>, fuzzy_match_cleaned_APC_known <chr>, #> #   fuzzy_match_cleaned_APNI <chr>, fuzzy_match_cleaned_APC_imprecise <chr>, …"},{"path":"https://traitecoevo.github.io/APCalign/reference/create_species_state_origin_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Process geographic data and return state level species origin and diversity counts — create_species_state_origin_matrix","title":"Process geographic data and return state level species origin and diversity counts — create_species_state_origin_matrix","text":"function processes geographic data available current version Australian Plant Census returns state level diversity native, introduced complicated species origins.","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/create_species_state_origin_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process geographic data and return state level species origin and diversity counts — create_species_state_origin_matrix","text":"","code":"create_species_state_origin_matrix(resources = load_taxonomic_resources())"},{"path":"https://traitecoevo.github.io/APCalign/reference/create_species_state_origin_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process geographic data and return state level species origin and diversity counts — create_species_state_origin_matrix","text":"resources taxonomic resources required make summary statistics.  Loading can slow, call load_taxonomic_resources separately greatly speed function pass resources .","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/create_species_state_origin_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process geographic data and return state level species origin and diversity counts — create_species_state_origin_matrix","text":"data frame columns representing state rows representing species. values cell represent origin species state.","code":""},{"path":[]},{"path":"https://traitecoevo.github.io/APCalign/reference/create_species_state_origin_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process geographic data and return state level species origin and diversity counts — create_species_state_origin_matrix","text":"","code":"create_species_state_origin_matrix() #> Loading resources... #> ...done #> # A tibble: 26,243 × 19 #>    species     NT    Qld   WA    ChI   NSW   SA    Vic   Tas   ACT   NI    LHI   #>    <chr>       <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> #>  1 Cycas angu… nati… nati… not … not … not … not … not … not … not … not … not … #>  2 Cycas aren… nati… not … not … not … not … not … not … not … not … not … not … #>  3 Cycas arms… nati… not … not … not … not … not … not … not … not … not … not … #>  4 Cycas arnh… nati… not … not … not … not … not … not … not … not … not … not … #>  5 Cycas bade… not … nati… not … not … not … not … not … not … not … not … not … #>  6 Cycas basa… not … not … nati… not … not … not … not … not … not … not … not … #>  7 Cycas brun… nati… nati… not … not … not … not … not … not … not … not … not … #>  8 Cycas cair… not … nati… not … not … not … not … not … not … not … not … not … #>  9 Cycas calc… nati… not … not … not … not … not … not … not … not … not … not … #> 10 Cycas cana… nati… not … not … not … not … not … not … not … not … not … not … #> # ℹ 26,233 more rows #> # ℹ 7 more variables: MI <chr>, HI <chr>, MDI <chr>, CoI <chr>, CSI <chr>, #> #   AR <chr>, CaI <chr>"},{"path":"https://traitecoevo.github.io/APCalign/reference/create_taxonomic_update_lookup.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a lookup table to help fix the taxonomy for a list of Australian plant species — create_taxonomic_update_lookup","title":"Create a lookup table to help fix the taxonomy for a list of Australian plant species — create_taxonomic_update_lookup","text":"function takes list Australian plant species needs reconciled current taxonomy generates lookup table help fix taxonomy. lookup table contains original species names, aligned species names, additional taxonomic information taxon IDs genera.","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/create_taxonomic_update_lookup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a lookup table to help fix the taxonomy for a list of Australian plant species — create_taxonomic_update_lookup","text":"","code":"create_taxonomic_update_lookup(   taxa,   stable_or_current_data = \"stable\",   version = default_version(),   one_to_many = \"return_all\",   full = FALSE,   APNI_matches = FALSE,   resources = load_taxonomic_resources(stable_or_current_data = stable_or_current_data,     version = version),   output = NULL )"},{"path":"https://traitecoevo.github.io/APCalign/reference/create_taxonomic_update_lookup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a lookup table to help fix the taxonomy for a list of Australian plant species — create_taxonomic_update_lookup","text":"taxa list Australian plant species needs reconciled current taxonomy. stable_or_current_data either \"stable\" consistent version, \"current\" leading edge version. version version number dataset use. one_to_many handle one_to_many taxonomic matches.  Default \"return_all\".  options \"collapse_to_higher_taxon\" \"most_likely_species\". most_likely_species defaults original_name name accepted APC; right certain species subsets, make errors cases, use caution. full logical whether full lookup table returned just two key columns APNI_matches Name matches APNI (Australian Plant Names Index) turned default. resources taxonomic resources used cleaning, default loading local place computer.  called repeatedly, much faster load resources using load_taxonomic_resources separately pass data . output file path save intermediate output ","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/create_taxonomic_update_lookup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a lookup table to help fix the taxonomy for a list of Australian plant species — create_taxonomic_update_lookup","text":"lookup table containing original species names, aligned species names, additional taxonomic information taxon IDs genera.","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/create_taxonomic_update_lookup.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a lookup table to help fix the taxonomy for a list of Australian plant species — create_taxonomic_update_lookup","text":"updated_reason represents taxonomic status aligned name","code":""},{"path":[]},{"path":"https://traitecoevo.github.io/APCalign/reference/create_taxonomic_update_lookup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a lookup table to help fix the taxonomy for a list of Australian plant species — create_taxonomic_update_lookup","text":"","code":"resources <- load_taxonomic_resources() #> Loading resources... #> ...done create_taxonomic_update_lookup(c(\"Eucalyptus regnans\",                                  \"Acacia melanoxylon\",                                  \"Banksia integrifolia\",                                  \"Not a species\"),                                  resources=resources) #> Checking alignments of 4 taxa #>   -> 0 names already matched; 0 names checked but without a match; 4 taxa yet to be checked #> # A tibble: 3 × 7 #>   original_name      aligned_name accepted_name taxon_rank author aligned_reason #>   <chr>              <chr>        <chr>         <chr>      <chr>  <chr>          #> 1 Eucalyptus regnans Eucalyptus … Eucalyptus r… Species    F.Mue… Exact match o… #> 2 Acacia melanoxylon Acacia mela… Acacia melan… Species    R.Br.  Exact match o… #> 3 Banksia integrifo… Banksia int… Banksia inte… Species    L.f.   Exact match o… #> # ℹ 1 more variable: updated_reason <chr>"},{"path":"https://traitecoevo.github.io/APCalign/reference/gbif_lite.html","id":null,"dir":"Reference","previous_headings":"","what":"GBIF Australian Plant Data — gbif_lite","title":"GBIF Australian Plant Data — gbif_lite","text":"subset plant data Global Biodiversity Information Facility","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/gbif_lite.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GBIF Australian Plant Data — gbif_lite","text":"","code":"gbif_lite"},{"path":"https://traitecoevo.github.io/APCalign/reference/gbif_lite.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"GBIF Australian Plant Data — gbif_lite","text":"gbif_lite data frame 129 rows 7 columns: species name first species scientificname infraspecificepithet name lowest terminal infraspecific epithet scientificname taxonrank taxonomic rank specific name decimalLongitude Longitude decimal degrees decimalLatitude Latitude decimal degrees scientificname Scientific Name verbatimscientificname Scientific name appeared original record","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/gbif_lite.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"GBIF Australian Plant Data — gbif_lite","text":"https://www.gbif.org/","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/load_taxonomic_resources.html","id":null,"dir":"Reference","previous_headings":"","what":"Load taxonomic resources from either stable or current versions of APC and APNI — load_taxonomic_resources","title":"Load taxonomic resources from either stable or current versions of APC and APNI — load_taxonomic_resources","text":"Loads taxonomic resources global environment. function accesses taxonomic data dataset using provided version number default version. loaded data contains two lists: APC APNI, contain taxonomic information plant species Australia. function creates several data frames filtering selecting data loaded lists.","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/load_taxonomic_resources.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load taxonomic resources from either stable or current versions of APC and APNI — load_taxonomic_resources","text":"","code":"load_taxonomic_resources(   stable_or_current_data = \"stable\",   version = default_version(),   reload = FALSE )"},{"path":"https://traitecoevo.github.io/APCalign/reference/load_taxonomic_resources.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load taxonomic resources from either stable or current versions of APC and APNI — load_taxonomic_resources","text":"stable_or_current_data Type dataset access. default \"stable\", loads dataset github archived file. set \"current\", dataset loaded URL cutting edge version, may change time without notice. version version number dataset use. Defaults default version. reload logical indicating whether reload dataset data source. Defaults FALSE.","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/load_taxonomic_resources.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load taxonomic resources from either stable or current versions of APC and APNI — load_taxonomic_resources","text":"taxonomic resources data loaded global environment.","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/load_taxonomic_resources.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load taxonomic resources from either stable or current versions of APC and APNI — load_taxonomic_resources","text":"","code":"load_taxonomic_resources(stable_or_current_data=\"stable\",version=\"0.0.2.9000\") #> Loading resources... #> ...done #> $APC #> # A tibble: 109,624 × 37 #>    taxonID    nameType acceptedNameUsageID acceptedNameUsage nomenclaturalStatus #>  * <chr>      <chr>    <chr>               <chr>             <chr>               #>  1 https://i… scienti… https://id.biodive… Plantae Haeckel   NA                  #>  2 https://i… scienti… https://id.biodive… Charophyta Sachs  NA                  #>  3 https://i… scienti… https://id.biodive… Charophyta Sachs  orth. var.          #>  4 https://i… scienti… https://id.biodive… Equisetopsida C.… NA                  #>  5 https://i… scienti… https://id.biodive… Equisetopsida C.… orth. var.          #>  6 https://i… scienti… https://id.biodive… Equisetopsida C.… NA                  #>  7 https://i… scienti… https://id.biodive… Cycadidae Pax     NA                  #>  8 https://i… scienti… https://id.biodive… Cycadales Pers. … NA                  #>  9 https://i… scienti… https://id.biodive… Cycadales Pers. … NA                  #> 10 https://i… scienti… https://id.biodive… Cycadales Pers. … NA                  #> # ℹ 109,614 more rows #> # ℹ 32 more variables: nomIlleg <chr>, nomInval <chr>, taxonomicStatus <chr>, #> #   proParte <lgl>, scientificName <chr>, scientificNameID <chr>, #> #   canonicalName <chr>, scientificNameAuthorship <chr>, #> #   parentNameUsageID <chr>, taxonRank <chr>, taxonRankSortOrder <dbl>, #> #   kingdom <chr>, class <chr>, subclass <chr>, family <chr>, #> #   taxonConceptID <chr>, nameAccordingTo <chr>, nameAccordingToID <chr>, … #>  #> $APNI #> # A tibble: 132,385 × 47 #>    scientificNameID     nameType scientificName scientificNameHTML canonicalName #>  * <chr>                <chr>    <chr>          <chr>              <chr>         #>  1 https://id.biodiver… scienti… Acanthus ebra… <scientific><name… Acanthus ebr… #>  2 https://id.biodiver… autonym  Acanthus ebra… <scientific><name… Acanthus ebr… #>  3 https://id.biodiver… scienti… Acanthus ebra… <scientific><name… Acanthus ebr… #>  4 https://id.biodiver… autonym  Acanthus ilic… <scientific><name… Acanthus ili… #>  5 https://id.biodiver… scienti… Acanthus ilic… <scientific><name… Acanthus ili… #>  6 https://id.biodiver… scienti… Acanthus ilic… <scientific><name… Acanthus ili… #>  7 https://id.biodiver… scienti… Acanthus ilic… <scientific><name… Acanthus ili… #>  8 https://id.biodiver… scienti… Acanthus moll… <scientific><name… Acanthus mol… #>  9 https://id.biodiver… scienti… Acanthus volu… <scientific><name… Acanthus vol… #> 10 https://id.biodiver… scienti… Acanthus L.    <scientific><name… Acanthus      #> # ℹ 132,375 more rows #> # ℹ 42 more variables: canonicalNameHTML <chr>, nameElement <chr>, #> #   nomenclaturalStatus <chr>, scientificNameAuthorship <chr>, autonym <lgl>, #> #   hybrid <lgl>, cultivar <lgl>, formula <lgl>, scientific <lgl>, #> #   nomInval <lgl>, nomIlleg <lgl>, namePublishedIn <chr>, #> #   namePublishedInID <chr>, namePublishedInYear <dbl>, nameInstanceType <chr>, #> #   nameAccordingToID <chr>, nameAccordingTo <chr>, originalNameUsage <chr>, … #>  #> $`APC list (accepted)` #> # A tibble: 30,538 × 13 #>    canonicalName     scientificName     taxonomicStatus ID    nameType taxonRank #>    <chr>             <chr>              <chr>           <chr> <chr>    <chr>     #>  1 Cycas angulata    Cycas angulata R.… accepted        http… scienti… Species   #>  2 Cycas arenicola   Cycas arenicola K… accepted        http… scienti… Species   #>  3 Cycas armstrongii Cycas armstrongii… accepted        http… scienti… Species   #>  4 Cycas arnhemica   Cycas arnhemica K… accepted        http… scienti… Species   #>  5 Cycas badensis    Cycas badensis K.… accepted        http… scienti… Species   #>  6 Cycas basaltica   Cycas basaltica C… accepted        http… scienti… Species   #>  7 Cycas brunnea     Cycas brunnea K.D… accepted        http… scienti… Species   #>  8 Cycas cairnsiana  Cycas cairnsiana … accepted        http… scienti… Species   #>  9 Cycas calcicola   Cycas calcicola M… accepted        http… scienti… Species   #> 10 Cycas canalis     Cycas canalis K.D… accepted        http… scienti… Species   #> # ℹ 30,528 more rows #> # ℹ 7 more variables: stripped_canonical <chr>, stripped_canonical2 <chr>, #> #   stripped_scientific <chr>, binomial <chr>, genus <chr>, trinomial <chr>, #> #   taxonomic_ref <chr> #>  #> $`APC list (known names)` #> # A tibble: 69,837 × 13 #>    canonicalName         scientificName taxonomicStatus ID    nameType taxonRank #>    <chr>                 <chr>          <chr>           <chr> <chr>    <chr>     #>  1 Pterostylis clivosa   Pterostylis c… alternative na… http… scienti… Species   #>  2 Pterostylis crebra    Pterostylis c… alternative na… http… scienti… Species   #>  3 Eucalyptus resinifer… Eucalyptus re… alternative na… http… scienti… Varietas  #>  4 Macrozamia pauli-gui… Macrozamia pa… basionym        http… scienti… Subspeci… #>  5 Lycopodium crebrum    Lycopodium cr… basionym        http… scienti… Species   #>  6 Lycopodium lockyeri   Lycopodium lo… basionym        http… scienti… Species   #>  7 Aralia polaris        Aralia polari… basionym        http… scienti… Species   #>  8 Sium nodiflorum       Sium nodiflor… basionym        http… scienti… Species   #>  9 Trachymene kochii     Trachymene ko… basionym        http… scienti… Species   #> 10 Pittosporum resinosum Pittosporum r… basionym        http… scienti… Species   #> # ℹ 69,827 more rows #> # ℹ 7 more variables: stripped_canonical <chr>, stripped_canonical2 <chr>, #> #   stripped_scientific <chr>, binomial <chr>, genus <chr>, trinomial <chr>, #> #   taxonomic_ref <chr> #>  #> $`APNI names` #> # A tibble: 15,377 × 13 #>    canonicalName         scientificName ID    nameType taxonRank taxonomicStatus #>    <chr>                 <chr>          <chr> <chr>    <chr>     <chr>           #>  1 (Eucalyptus globulus… (Eucalyptus g… http… hybrid-… Species   unplaced for A… #>  2 (Eucalyptus globulus… (Eucalyptus g… http… hybrid-… Species   unplaced for A… #>  3 (Eucalyptus johnston… (Eucalyptus j… http… hybrid-… Species   unplaced for A… #>  4 (Eucalyptus johnston… (Eucalyptus j… http… hybrid-… Species   unplaced for A… #>  5 (Eucalyptus urnigera… (Eucalyptus u… http… hybrid-… Species   unplaced for A… #>  6 (Eucalyptus urnigera… (Eucalyptus u… http… hybrid-… Species   unplaced for A… #>  7 Abacopteris presliana Abacopteris p… http… scienti… Species   unplaced for A… #>  8 Abarema clypearia f.… Abarema clype… http… scienti… Forma     unplaced for A… #>  9 Abarema pruinosa      Abarema pruin… http… scienti… Species   unplaced for A… #> 10 Abelia rupestris      Abelia rupest… http… scienti… Species   unplaced for A… #> # ℹ 15,367 more rows #> # ℹ 7 more variables: stripped_canonical <chr>, stripped_canonical2 <chr>, #> #   stripped_scientific <chr>, binomial <chr>, trinomial <chr>, genus <chr>, #> #   taxonomic_ref <chr> #>  #> $genera_accepted #> # A tibble: 3,094 × 8 #>    canonicalName acceptedNameUsage scientificName taxonomicStatus ID    nameType #>    <chr>         <chr>             <chr>          <chr>           <chr> <chr>    #>  1 Cycas         Cycas L.          Cycas L.       accepted        http… scienti… #>  2 Bowenia       Bowenia Hook.f.   Bowenia Hook.… accepted        http… scienti… #>  3 Lepidozamia   Lepidozamia Regel Lepidozamia R… accepted        http… scienti… #>  4 Macrozamia    Macrozamia Miq.   Macrozamia Mi… accepted        http… scienti… #>  5 Equisetum     Equisetum L.      Equisetum L.   accepted        http… scienti… #>  6 Isoetes       Isoetes L.        Isoetes L.     accepted        http… scienti… #>  7 Huperzia      Huperzia Bernh.   Huperzia Bern… accepted        http… scienti… #>  8 Lycopodiella  Lycopodiella Hol… Lycopodiella … accepted        http… scienti… #>  9 Lycopodium    Lycopodium L.     Lycopodium L.  accepted        http… scienti… #> 10 Phlegmariurus Phlegmariurus Ho… Phlegmariurus… accepted        http… scienti… #> # ℹ 3,084 more rows #> # ℹ 2 more variables: taxonRank <chr>, taxonomic_ref <chr> #>  #> $genera_known #> # A tibble: 2,852 × 8 #>    canonicalName acceptedNameUsage scientificName taxonomicStatus ID    nameType #>    <chr>         <chr>             <chr>          <chr>           <chr> <chr>    #>  1 Encephallart… Encephalartos Le… Encephallarte… orthographic v… http… scienti… #>  2 Encephalartus Encephalartos Le… Encephalartus… orthographic v… http… scienti… #>  3 Encephalartos Encephalartos Le… Encephalartos… excluded        http… scienti… #>  4 Catakidozamia Lepidozamia Regel Catakidozamia… taxonomic syno… http… scienti… #>  5 Zamia         Zamia L.          Zamia L.       excluded        http… scienti… #>  6 Calamaria     Isoetes L.        Calamaria Boe… taxonomic syno… http… scienti… #>  7 Lateristachys Lycopodiella Hol… Lateristachys… taxonomic syno… http… scienti… #>  8 Lepidotis     Lycopodiella Hol… Lepidotis P.B… taxonomic syno… http… scienti… #>  9 Austrolycopo… Lycopodium L.     Austrolycopod… taxonomic syno… http… scienti… #> 10 Diphasium     Lycopodium L.     Diphasium C.P… taxonomic syno… http… scienti… #> # ℹ 2,842 more rows #> # ℹ 2 more variables: taxonRank <chr>, taxonomic_ref <chr> #>  #> $genera_APNI #> # A tibble: 1,430 × 6 #>    canonicalName taxonomicStatus nameType taxonRank scientificName taxonomic_ref #>    <chr>         <chr>           <chr>    <chr>     <chr>          <chr>         #>  1 Beloperone    unplaced        scienti… Genus     Beloperone Ne… APNI          #>  2 Hemiadelphis  unplaced        scienti… Genus     Hemiadelphis … APNI          #>  3 Leptosiphoni… unplaced        scienti… Genus     Leptosiphoniu… APNI          #>  4 Megaskepasma  unplaced        scienti… Genus     Megaskepasma … APNI          #>  5 Meyenia       unplaced        scienti… Genus     Meyenia Nees   APNI          #>  6 Simonachne    unplaced        scienti… Genus     Simonachne E.… APNI          #>  7 Thyrsacanthus unplaced        scienti… Genus     Thyrsacanthus… APNI          #>  8 Synarrhena    unplaced        scienti… Genus     Synarrhena F.… APNI          #>  9 Allosorus     unplaced        scienti… Genus     Allosorus Ber… APNI          #> 10 Austrogramme  unplaced        scienti… Genus     Austrogramme … APNI          #> # ℹ 1,420 more rows #>  #> $genera_all #> # A tibble: 7,376 × 9 #>    canonicalName acceptedNameUsage scientificName taxonomicStatus ID    nameType #>    <chr>         <chr>             <chr>          <chr>           <chr> <chr>    #>  1 Cycas         Cycas L.          Cycas L.       accepted        http… scienti… #>  2 Bowenia       Bowenia Hook.f.   Bowenia Hook.… accepted        http… scienti… #>  3 Lepidozamia   Lepidozamia Regel Lepidozamia R… accepted        http… scienti… #>  4 Macrozamia    Macrozamia Miq.   Macrozamia Mi… accepted        http… scienti… #>  5 Equisetum     Equisetum L.      Equisetum L.   accepted        http… scienti… #>  6 Isoetes       Isoetes L.        Isoetes L.     accepted        http… scienti… #>  7 Huperzia      Huperzia Bernh.   Huperzia Bern… accepted        http… scienti… #>  8 Lycopodiella  Lycopodiella Hol… Lycopodiella … accepted        http… scienti… #>  9 Lycopodium    Lycopodium L.     Lycopodium L.  accepted        http… scienti… #> 10 Phlegmariurus Phlegmariurus Ho… Phlegmariurus… accepted        http… scienti… #> # ℹ 7,366 more rows #> # ℹ 3 more variables: taxonRank <chr>, taxonomic_ref <chr>, cleaned_name <chr> #>  #> $family_accepted #> # A tibble: 307 × 37 #>    taxonID    nameType acceptedNameUsageID acceptedNameUsage nomenclaturalStatus #>    <chr>      <chr>    <chr>               <chr>             <chr>               #>  1 https://i… scienti… https://id.biodive… Cycadaceae Pers.  nom. cons.          #>  2 https://i… scienti… https://id.biodive… Zamiaceae Horan.  nom. cons.          #>  3 https://i… scienti… https://id.biodive… Equisetaceae Mic… NA                  #>  4 https://i… scienti… https://id.biodive… Isoetaceae Rchb.  NA                  #>  5 https://i… scienti… https://id.biodive… Lycopodiaceae P.… NA                  #>  6 https://i… scienti… https://id.biodive… Selaginellaceae … NA                  #>  7 https://i… scienti… https://id.biodive… Apiaceae Lindl.   nom. cons.          #>  8 https://i… scienti… https://id.biodive… Araliaceae Juss.  nom. cons.          #>  9 https://i… scienti… https://id.biodive… Griseliniaceae J… NA                  #> 10 https://i… scienti… https://id.biodive… Myodocarpaceae D… NA                  #> # ℹ 297 more rows #> # ℹ 32 more variables: nomIlleg <chr>, nomInval <chr>, taxonomicStatus <chr>, #> #   proParte <lgl>, scientificName <chr>, scientificNameID <chr>, #> #   canonicalName <chr>, scientificNameAuthorship <chr>, #> #   parentNameUsageID <chr>, taxonRank <chr>, taxonRankSortOrder <dbl>, #> #   kingdom <chr>, class <chr>, subclass <chr>, family <chr>, #> #   taxonConceptID <chr>, nameAccordingTo <chr>, nameAccordingToID <chr>, … #>"},{"path":"https://traitecoevo.github.io/APCalign/reference/native_anywhere_in_australia.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a vector of species are native anywhere in Australia — native_anywhere_in_australia","title":"Check if a vector of species are native anywhere in Australia — native_anywhere_in_australia","text":"function checks given species native anywhere Australia. creates lookup table taxonomic resources, checks species listed native table. Note detect within Australia invasives, e.g. species Western Australia invasive east coast. complete matrix species states also represents within-Australia invasions, use create_species_state_origin_matrix.","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/native_anywhere_in_australia.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a vector of species are native anywhere in Australia — native_anywhere_in_australia","text":"","code":"native_anywhere_in_australia(species, resources = load_taxonomic_resources())"},{"path":"https://traitecoevo.github.io/APCalign/reference/native_anywhere_in_australia.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a vector of species are native anywhere in Australia — native_anywhere_in_australia","text":"species character string representing binomial species. resources optional list taxonomic resources use lookup. provided, function load default taxonomic resources using load_taxonomic_resources() function.","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/native_anywhere_in_australia.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a vector of species are native anywhere in Australia — native_anywhere_in_australia","text":"tibble two columns: species, input species, native_anywhere_in_aus, logical vector indicating whether species native anywhere Australia.","code":""},{"path":[]},{"path":"https://traitecoevo.github.io/APCalign/reference/native_anywhere_in_australia.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if a vector of species are native anywhere in Australia — native_anywhere_in_australia","text":"","code":"native_anywhere_in_australia(c(\"Eucalyptus globulus\",\"Pinus radiata\",\"Banksis notaspecies\")) #> Loading resources... #> ...done #> # A tibble: 3 × 2 #>   species             native_anywhere_in_aus                    #>   <chr>               <chr>                                     #> 1 Eucalyptus globulus considered native to Australia by APC     #> 2 Pinus radiata       not considered native to Australia by APC #> 3 Banksis notaspecies binomial not found in APC lookup"},{"path":"https://traitecoevo.github.io/APCalign/reference/state_diversity_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Australian plant state-level diversity for native, introduced, and more complicated species origins — state_diversity_counts","title":"Calculate Australian plant state-level diversity for native, introduced, and more complicated species origins — state_diversity_counts","text":"function calculates state-level diversity native, introduced, complicated species origins based geographic data available current Australian Plant Census.","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/state_diversity_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Australian plant state-level diversity for native, introduced, and more complicated species origins — state_diversity_counts","text":"","code":"state_diversity_counts(   state,   resources = load_taxonomic_resources(version = default_version()) )"},{"path":"https://traitecoevo.github.io/APCalign/reference/state_diversity_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Australian plant state-level diversity for native, introduced, and more complicated species origins — state_diversity_counts","text":"state character string indicating Australian state territory calculate diversity . Possible values \"NSW\", \"NT\", \"Qld\", \"WA\", \"ChI\", \"SA\", \"Vic\", \"Tas\", \"ACT\", \"NI\", \"LHI\", \"MI\", \"HI\", \"MDI\", \"CoI\", \"CSI\", \"AR\". resources taxonomic resources required make summary statistics.  loading can slow, call load_taxonomic_resources separately greatly speed function pass resources .","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/state_diversity_counts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Australian plant state-level diversity for native, introduced, and more complicated species origins — state_diversity_counts","text":"tibble diversity counts specified state territory, including native, introduced, complicated species origins. tibble three columns: \"origin\" indicating origin species, \"state\" indicating Australian state territory, \"num_species\" indicating number species origin state.","code":""},{"path":[]},{"path":"https://traitecoevo.github.io/APCalign/reference/state_diversity_counts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Australian plant state-level diversity for native, introduced, and more complicated species origins — state_diversity_counts","text":"","code":"state_diversity_counts(state = \"NSW\") #> Loading resources... #> ...done #> # A tibble: 7 × 3 #>   origin                            state num_species #>   <chr>                             <chr> <table[1d]> #> 1 doubtfully naturalised            NSW     93        #> 2 formerly naturalised              NSW      8        #> 3 native                            NSW   5958        #> 4 native and doubtfully naturalised NSW      2        #> 5 native and naturalised            NSW     34        #> 6 naturalised                       NSW   1580        #> 7 presumed extinct                  NSW      8"},{"path":"https://traitecoevo.github.io/APCalign/reference/update_taxonomy.html","id":null,"dir":"Reference","previous_headings":"","what":"Use APC and APNI to update taxonomy, replacing synonyms to current taxa where relevant — update_taxonomy","title":"Use APC and APNI to update taxonomy, replacing synonyms to current taxa where relevant — update_taxonomy","text":"function uses Australia's Virtual Herbarium's taxonomic resources, specifically Australian Plant Census (APC) Australian Plant Name Index (APNI), update taxonomy plant species, replacing synonyms current accepted name.","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/update_taxonomy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use APC and APNI to update taxonomy, replacing synonyms to current taxa where relevant — update_taxonomy","text":"","code":"update_taxonomy(   aligned_names,   output = NULL,   resources = load_taxonomic_resources() )"},{"path":"https://traitecoevo.github.io/APCalign/reference/update_taxonomy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use APC and APNI to update taxonomy, replacing synonyms to current taxa where relevant — update_taxonomy","text":"aligned_names character vector plant names update. names must format scientific name, genus species, may contain additional qualifiers subspecies varieties. names case insensitive. output (optional) Name file results saved. default NULL file created. specified, output saved CSV file given name. resources taxonomic resources required make summary statistics.  Loading can slow, call load_taxonomic_resources separately greatly speed function pass resources .","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/update_taxonomy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use APC and APNI to update taxonomy, replacing synonyms to current taxa where relevant — update_taxonomy","text":"tibble updated taxonomy specified plant names. tibble contains following columns: aligned_name: input plant name. source: source updated taxonomic information (APC APNI). taxonIDClean: unique identifier updated taxon. taxonomicStatusClean: taxonomic status updated taxon. alternativeTaxonomicStatusClean: alternative taxonomic status input name, . acceptedNameUsageID: unique identifier accepted name input name. canonicalName: accepted scientific name input name. scientificNameAuthorship: authorship information accepted name. taxonRank: taxonomic rank accepted name. taxonomicStatus: taxonomic status accepted name. family: family accepted name. subclass: subclass accepted name. taxonDistribution: distribution accepted name. ccAttributionIRI: Creative Commons Attribution International Rights URI accepted name.","code":""},{"path":[]},{"path":"https://traitecoevo.github.io/APCalign/reference/update_taxonomy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use APC and APNI to update taxonomy, replacing synonyms to current taxa where relevant — update_taxonomy","text":"","code":"# Update taxonomy for two plant names and print the result update_taxonomy(c(\"Eucalyptus pauciflora\", \"Acacia victoriae\")) #> Loading resources... #> ...done #> # A tibble: 2 × 14 #>   aligned_name   source taxonIDClean taxonomicStatusClean alternativeTaxonomic…¹ #>   <chr>          <chr>  <chr>        <chr>                <chr>                  #> 1 Acacia victor… APC    https://id.… accepted             NA                     #> 2 Eucalyptus pa… APC    https://id.… accepted             NA                     #> # ℹ abbreviated name: ¹​alternativeTaxonomicStatusClean #> # ℹ 9 more variables: acceptedNameUsageID <chr>, canonicalName <chr>, #> #   scientificNameAuthorship <chr>, taxonRank <chr>, taxonomicStatus <chr>, #> #   family <chr>, subclass <chr>, taxonDistribution <chr>, #> #   ccAttributionIRI <chr>"},{"path":"https://traitecoevo.github.io/APCalign/news/index.html","id":"apcalign-011","dir":"Changelog","previous_headings":"","what":"APCalign 0.1.1","title":"APCalign 0.1.1","text":"Updated Title DESCRIPTION file Built vignette doc/ Corrected broken links vignette pkgdown","code":""}]
