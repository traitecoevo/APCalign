[{"path":"https://traitecoevo.github.io/APCalign/articles/APCalign.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"APCalign","text":"‘APCalign’ currently CRAN. can install current developmental version using demonstrate use ‘APCalign’, use example dataset gbif_lite documented ?gbif_lite","code":"# install.packages(\"remotes\") remotes::install_github(\"traitecoevo/APCalign\")  library(APCalign) dim(gbif_lite) #> [1] 129   7  gbif_lite |> print(n = 6) #> # A tibble: 129 × 7 #>   species              infraspecificepithet taxonrank decimalLongitude decimalLatitude scientificname verbatimscientificname #>   <chr>                <chr>                <chr>                <dbl>           <dbl> <chr>          <chr>                  #> 1 Tetratheca ciliata   <NA>                 SPECIES               145.           -37.4 Tetratheca ci… Tetratheca ciliata     #> 2 Peganum harmala      <NA>                 SPECIES               139.           -33.3 Peganum harma… Peganum harmala        #> 3 Calotis multicaulis  <NA>                 SPECIES               115.           -24.3 Calotis multi… Calotis multicaulis    #> 4 Leptospermum triner… <NA>                 SPECIES               151.           -34.0 Leptospermum … Leptospermum trinervi… #> 5 Lepidosperma latera… <NA>                 SPECIES               142.           -37.3 Lepidosperma … Lepidosperma laterale  #> 6 Enneapogon polyphyl… <NA>                 SPECIES               129.           -17.8 Enneapogon po… Enneapogon polyphyllus #> # ℹ 123 more rows"},{"path":"https://traitecoevo.github.io/APCalign/articles/APCalign.html","id":"retrieve-taxonomic-resources","dir":"Articles","previous_headings":"","what":"Retrieve taxonomic resources","title":"APCalign","text":"first step retrieve entire APC APNI name databases store locally taxonomic resources. achieve using load_taxonomic_resources(). two versions databases can retrieve stable_or_current_data argument. Calling: stable retrieve recent, archived version databases GitHub releases. set default option. current retrieve --date databases directly APC APNI website. Note databases quite large initial retrieval stable versions take minutes. taxonomic resources stored locally, subsequent retrievals take less time. Retrieving current resources always take longer since accessing latest information website. Check Resource Caching article learn APC APNIC databases accessed, stored retrieved. reproducible workflow, recommend specifying exact stable version want use.","code":"# Benchmarking the retrieval of `stable` or `current` resources stable_start_time <- Sys.time() stable_resources <- load_taxonomic_resources(stable_or_current_data = \"stable\") #> Loading resources into memory... #>  ========================================= =================================================================================== ============================================================================================================================ #> ...done stable_end_time <-  Sys.time()  current_start_time <- Sys.time() current_resources <- load_taxonomic_resources(stable_or_current_data = \"current\") #> Loading resources into memory... #>  ========================================= =================================================================================== ============================================================================================================================ #> ...done current_end_time <-  Sys.time()  # Compare times stable_end_time - stable_start_time #> Time difference of 6.69976 secs resources <- load_taxonomic_resources(stable_or_current_data = \"stable\", version = \"2024-10-11\") #> Loading resources into memory... #>  ========================================= =================================================================================== ============================================================================================================================ #> ...done"},{"path":"https://traitecoevo.github.io/APCalign/articles/APCalign.html","id":"align-and-update-plant-taxon-names","dir":"Articles","previous_headings":"","what":"Align and update plant taxon names","title":"APCalign","text":"Now can query taxonomic names taxonomic resources just retrieved using create_taxonomic_update_lookup(). --one function : Align taxonomic names APC APNI using matching algorithms Update names APC-accepted species infraspecific name whenever possible. Return suggested name names, defaulting accepted_name available, otherwise providing APNI name name genus-level alignment possible. like learn step, take look section Closer look name alignment updating ‘APCalign’ original_name taxon name used original data. aligned_name taxon name used link APC identify synonyms. accepted_name currently, accepted taxon name used Australian Plant Census. suggested_name best possible name option original_name.","code":"library(dplyr) #>  #> Attaching package: 'dplyr' #> The following object is masked from 'package:testthat': #>  #>     matches #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union  updated_gbif_names <- gbif_lite |>    pull(species) |>    create_taxonomic_update_lookup(resources = resources) #> Checking alignments of 121 taxa #>   -> of these 112 names have a perfect match to a scientific name in the APC.  #>       Alignments being sought for remaining names.  updated_gbif_names |>    print(n = 6) #> # A tibble: 129 × 12 #>   original_name           aligned_name      accepted_name suggested_name genus taxon_rank taxonomic_dataset taxonomic_status #>   <chr>                   <chr>             <chr>         <chr>          <chr> <chr>      <chr>             <chr>            #> 1 Tetratheca ciliata      Tetratheca cilia… Tetratheca c… Tetratheca ci… Tetr… species    APC               accepted         #> 2 Peganum harmala         Peganum harmala   Peganum harm… Peganum harma… Pega… species    APC               accepted         #> 3 Calotis multicaulis     Calotis multicau… Calotis mult… Calotis multi… Calo… species    APC               accepted         #> 4 Leptospermum trinervium Leptospermum tri… Leptospermum… Leptospermum … Lept… species    APC               accepted         #> 5 Lepidosperma laterale   Lepidosperma lat… Lepidosperma… Lepidosperma … Lepi… species    APC               accepted         #> 6 Enneapogon polyphyllus  Enneapogon polyp… Enneapogon p… Enneapogon po… Enne… species    APC               accepted         #> # ℹ 123 more rows #> # ℹ 4 more variables: scientific_name <chr>, aligned_reason <chr>, update_reason <chr>, number_of_collapsed_taxa <dbl>"},{"path":"https://traitecoevo.github.io/APCalign/articles/APCalign.html","id":"plant-established-status-across-statesterritories","dir":"Articles","previous_headings":"","what":"Plant established status across states/territories","title":"APCalign","text":"‘APCalign’ can also provide state/territory distribution established status (native/introduced) APC. can access established status data state/territory using create_species_state_origin_matrix() breakdown possible values origin can also obtain breakdown species established status particular state/territory using state_diversity_counts() Using established status data state/territory information, can check plant taxa native using native_anywhere_in_australia()","code":"# Retrieve status data by state/territory  status_matrix <- create_species_state_origin_matrix(resources = resources) library(purrr) #>  #> Attaching package: 'purrr' #> The following object is masked from 'package:testthat': #>  #>     is_null library(janitor) #>  #> Attaching package: 'janitor' #> The following objects are masked from 'package:stats': #>  #>     chisq.test, fisher.test  # Obtain unique values status_matrix |>    select(-species) |>    flatten_chr() |>    tabyl() #>  flatten_chr(select(status_matrix, -species))      n      percent #>                        doubtfully naturalised   1129 2.387326e-03 #>                          formerly naturalised    277 5.857302e-04 #>                                        native  40363 8.534956e-02 #>             native and doubtfully naturalised      9 1.903094e-05 #>                        native and naturalised    137 2.896933e-04 #>                   native and uncertain origin      2 4.229099e-06 #>                                   naturalised   8769 1.854248e-02 #>                                   not present 422103 8.925576e-01 #>                              presumed extinct    102 2.156840e-04 #>                              uncertain origin     23 4.863464e-05 state_diversity_counts(\"NSW\", resources = resources) #> # A tibble: 7 × 3 #>   origin                            state num_species #>   <chr>                             <chr> <table[1d]> #> 1 doubtfully naturalised            NSW     93        #> 2 formerly naturalised              NSW      8        #> 3 native                            NSW   5968        #> 4 native and doubtfully naturalised NSW      2        #> 5 native and naturalised            NSW     34        #> 6 naturalised                       NSW   1580        #> 7 presumed extinct                  NSW      8 library(dplyr)  updated_gbif_names |>    sample_n(1) |>  # Choosing a random species   pull(suggested_name) |> # Extracting this APC accepted name   native_anywhere_in_australia(resources = resources)  #> # A tibble: 1 × 2 #>   species             native_anywhere_in_aus #>   <chr>               <chr>                  #> 1 Lomandra longifolia native"},{"path":"https://traitecoevo.github.io/APCalign/articles/APCalign.html","id":"closer-look","dir":"Articles","previous_headings":"","what":"Closer look at name standardisation with ‘APCalign’","title":"APCalign","text":"create_taxonomic_update_lookup simple, wrapper, function novice users want quickly check standardise taxon names. experienced users, can take look sub functions match_taxa(), align_taxa() update_taxonomy() see taxon names processed, aligned updated.","code":""},{"path":"https://traitecoevo.github.io/APCalign/articles/APCalign.html","id":"aligning-names-to-apc-and-apni","dir":"Articles","previous_headings":"Closer look at name standardisation with ‘APCalign’","what":"Aligning names to APC and APNI","title":"APCalign","text":"function align_taxa : functions standardise_names, strip_names strip_names_extra standardise infraspecific taxon designations clean punctuation whitespaces taxonomic name flows progression 50 match algorithms able aligned name either APC APNI list. include exact fuzzy matches. Fuzzy matches designed capture small spelling mistakes syntax errors phrase names. include matches entire name string matches just select words sequence. sequence matches carefully curated align names fewest mistakes. names can resolved genus, reformats name offer standardised genus sp. name, additional information/notes provided part original name square brackets, Acacia sp. [skinny leaves] Acacia sp. [Broken Hill] Determine taxonomic_reference (APC APNI) name-alignment. Note align_taxa seek update outdated taxonomy. process occurs update_taxonomy process. align_taxa instead aligns name input closest match amongst names documented APC APNI. every aligned_name, align_taxa() provide aligned_reason can review table counts:","code":"library(dplyr)  aligned_gbif_taxa <- gbif_lite |>    pull(species) |>    align_taxa(resources = resources) #> Checking alignments of 121 taxa #>   -> of these 112 names have a perfect match to a scientific name in the APC.  #>       Alignments being sought for remaining names.  aligned_gbif_taxa |>    print(n = 6) #> # A tibble: 129 × 7 #>   original_name           cleaned_name            aligned_name    taxonomic_dataset taxon_rank aligned_reason alignment_code #>   <chr>                   <chr>                   <chr>           <chr>             <chr>      <chr>          <chr>          #> 1 Tetratheca ciliata      Tetratheca ciliata      Tetratheca cil… APC               species    Exact match o… match_01c_acc… #> 2 Peganum harmala         Peganum harmala         Peganum harmala APC               species    Exact match o… match_01c_acc… #> 3 Calotis multicaulis     Calotis multicaulis     Calotis multic… APC               species    Exact match o… match_01c_acc… #> 4 Leptospermum trinervium Leptospermum trinervium Leptospermum t… APC               species    Exact match o… match_01c_acc… #> 5 Lepidosperma laterale   Lepidosperma laterale   Lepidosperma l… APC               species    Exact match o… match_01c_acc… #> 6 Enneapogon polyphyllus  Enneapogon polyphyllus  Enneapogon pol… APC               species    Exact match o… match_01c_acc… #> # ℹ 123 more rows library(janitor)  aligned_gbif_taxa |>    pull(aligned_reason) |>    tabyl() |>    tibble()  #> # A tibble: 6 × 4 #>   `pull(aligned_gbif_taxa, aligned_reason)`                                                          n percent valid_percent #>   <chr>                                                                                          <int>   <dbl>         <dbl> #> 1 Exact match of taxon name to an APC-accepted canonical name once punctuation and filler words…   118 0.915         0.929   #> 2 Exact match of taxon name to an APC-known canonical name once punctuation and filler words ar…     6 0.0465        0.0472  #> 3 Exact match of taxon name to an APNI-listed canonical name once punctuation and filler words …     1 0.00775       0.00787 #> 4 Exact match of the first two words of the taxon name to an APC-accepted canonical name (2024-…     1 0.00775       0.00787 #> 5 Exact match of the first word of the taxon name to an APC-accepted genus (2024-11-14)              1 0.00775       0.00787 #> 6 <NA>                                                                                               2 0.0155       NA"},{"path":"https://traitecoevo.github.io/APCalign/articles/APCalign.html","id":"fuzzy-match","dir":"Articles","previous_headings":"Closer look at name standardisation with ‘APCalign’ > Aligning names to APC and APNI","what":"Configuring matching precision and aligned output","title":"APCalign","text":"arguments align_taxa allows select 50 matching algorithms activated/deactivated degree fuzziness fuzzy matching function fuzzy_matches turns fuzzy matching / (defaults TRUE). fuzzy_abs_dist fuzzy_rel_dist control degree fuzzy matching (default fuzzy_abs_dist = 3 & fuzzy_rel_dist = 0.2). imprecise_fuzzy_matches turns imprecise fuzzy matching / (defaults FALSE; true set fuzzy_abs_dist = 5 & fuzzy_rel_dist = 0.25). APNI_matches turns matches APNI list /(defaults TRUE). identifier allows specify text string added genus-level matches, indicating site, study, etc e.g. Acacia sp. [Blue Mountains]","code":""},{"path":"https://traitecoevo.github.io/APCalign/articles/APCalign.html","id":"update","dir":"Articles","previous_headings":"Closer look at name standardisation with ‘APCalign’","what":"Updating to APC-accepted names","title":"APCalign","text":"update_taxonomy() uses information generated align_taxa() , whenever possible, update names APC-accepted names.","code":"updated_gbif_taxa <- aligned_gbif_taxa |>    update_taxonomy(resources = resources)  updated_gbif_taxa |>    print(n = 6) #> # A tibble: 129 × 21 #>   original_name         aligned_name accepted_name suggested_name genus family taxon_rank taxonomic_dataset taxonomic_status #>   <chr>                 <chr>        <chr>         <chr>          <chr> <chr>  <chr>      <chr>             <chr>            #> 1 Tetratheca ciliata    Tetratheca … Tetratheca c… Tetratheca ci… Tetr… Elaeo… species    APC               accepted         #> 2 Peganum harmala       Peganum har… Peganum harm… Peganum harma… Pega… Nitra… species    APC               accepted         #> 3 Calotis multicaulis   Calotis mul… Calotis mult… Calotis multi… Calo… Aster… species    APC               accepted         #> 4 Leptospermum trinerv… Leptospermu… Leptospermum… Leptospermum … Lept… Myrta… species    APC               accepted         #> 5 Lepidosperma laterale Lepidosperm… Lepidosperma… Lepidosperma … Lepi… Cyper… species    APC               accepted         #> 6 Enneapogon polyphyll… Enneapogon … Enneapogon p… Enneapogon po… Enne… Poace… species    APC               accepted         #> # ℹ 123 more rows #> # ℹ 12 more variables: taxonomic_status_aligned <chr>, aligned_reason <chr>, update_reason <chr>, subclass <chr>, #> #   taxon_distribution <chr>, scientific_name <chr>, taxon_ID <chr>, taxon_ID_genus <chr>, scientific_name_ID <chr>, #> #   canonical_name <chr>, row_number <dbl>, number_of_collapsed_taxa <dbl>"},{"path":"https://traitecoevo.github.io/APCalign/articles/APCalign.html","id":"taxonomic-resources-used-for-updating-names","dir":"Articles","previous_headings":"Closer look at name standardisation with ‘APCalign’ > Updating to APC-accepted names","what":"Taxonomic resources used for updating names","title":"APCalign","text":"APC includes previously recorded taxonomic names current taxon concept, designating currently-accepted name taxonomic_status: accepted, previously used inappropriately used names taxon concept alternative taxonomic statuses documented (e.g. taxonomic synonym, orthographic variant, misapplied). APC includes column acceptedNameUsageID links taxon name alternative taxonomic status current taxon name, allowing outdated/inappropriately used names synced current name. Note: Names listed APNI absent APC designated taxonomic_dataset: APNI APCalign. names currently unknown APC. time, list shrinks, taxonomists link ever occasionally used name variants APC-accepted taxon. However, now, names listed APNI updated","code":""},{"path":"https://traitecoevo.github.io/APCalign/articles/APCalign.html","id":"name-updates-at-different-taxonomic-levels","dir":"Articles","previous_headings":"Closer look at name standardisation with ‘APCalign’ > Updating to APC-accepted names","what":"Name updates at different taxonomic levels","title":"APCalign","text":"update_taxonomy() divides names lists based taxon_rank taxonomic_dataset assigned align_taxa, list requires different updating algorithms. taxonomic names designated taxon_rank = species/infraspecific taxonomic_dataset = APC can updated APC-accepted name. taxa, may possible align genus-name APC-accepted genus. taxa, suggested_name provided, selecting accepted_name available, otherwise aligned_name, , possible, updated, APC-accepted genus name.","code":""},{"path":"https://traitecoevo.github.io/APCalign/articles/APCalign.html","id":"taxonomic-splits","dir":"Articles","previous_headings":"Closer look at name standardisation with ‘APCalign’ > Updating to APC-accepted names","what":"Taxonomic splits","title":"APCalign","text":"Taxonomic splits refers instances single taxon concept subsequently split multiple taxon concepts. taxa, aligned_name “old” taxon concept name, impossible know currently accepted taxon concepts name represents. function update_taxonomy includes argument taxonomic_splits, offering three alternative outputs taxon concepts split. most_likely_species default value, returns accepted_name original taxon_concept; alternative names documented square brackets part suggested name (Acacia aneura [alternative possible names: Acacia minyura (pro parte misapplied) | Acacia paraneura (pro parte misapplied) | Acacia quadrimarginea (misapplied)). return_all returns currently accepted names split original taxon_concept; leads increase number rows output table. (Acacia aneura, Acacia minyura Acacia paraneura output separate row, unique taxon_ID) collapse_to_higher_taxon declares split names, way certain accepted name appropriate therefore best possible match genus level; accepted_name returned, taxon_rank demoted genus suggested name documents possible species-level names square brackets (Acacia sp. [collapsed names: Acacia aneura (accepted) | Acacia minyura (pro parte misapplied) | Acacia paraneura (pro parte misapplied)])","code":"library(dplyr)  aligned_gbif_taxa |>    update_taxonomy(taxonomic_splits = \"most_likely_species\",                    resources = resources)  |>    filter(original_name == \"Acacia aneura\")  # Subsetting Acacia aneura as an example  #> # A tibble: 1 × 21 #>   original_name aligned_name  accepted_name suggested_name        genus family taxon_rank taxonomic_dataset taxonomic_status #>   <chr>         <chr>         <chr>         <chr>                 <chr> <chr>  <chr>      <chr>             <chr>            #> 1 Acacia aneura Acacia aneura Acacia aneura Acacia aneura [alter… Acac… Fabac… species    APC               accepted         #> # ℹ 12 more variables: taxonomic_status_aligned <chr>, aligned_reason <chr>, update_reason <chr>, subclass <chr>, #> #   taxon_distribution <chr>, scientific_name <chr>, taxon_ID <chr>, taxon_ID_genus <chr>, scientific_name_ID <chr>, #> #   canonical_name <chr>, row_number <dbl>, number_of_collapsed_taxa <dbl> aligned_gbif_taxa |>    update_taxonomy(taxonomic_splits = \"return_all\",                   resources = resources)  |>    filter(original_name == \"Acacia aneura\") # Subsetting Acacia aneura as an example #> # A tibble: 3 × 21 #>   original_name aligned_name  accepted_name    suggested_name   genus  family  taxon_rank taxonomic_dataset taxonomic_status #>   <chr>         <chr>         <chr>            <chr>            <chr>  <chr>   <chr>      <chr>             <chr>            #> 1 Acacia aneura Acacia aneura Acacia aneura    Acacia aneura    Acacia Fabace… species    APC               accepted         #> 2 Acacia aneura Acacia aneura Acacia minyura   Acacia minyura   Acacia Fabace… species    APC               accepted         #> 3 Acacia aneura Acacia aneura Acacia paraneura Acacia paraneura Acacia Fabace… species    APC               accepted         #> # ℹ 12 more variables: taxonomic_status_aligned <chr>, aligned_reason <chr>, update_reason <chr>, subclass <chr>, #> #   taxon_distribution <chr>, scientific_name <chr>, taxon_ID <chr>, taxon_ID_genus <chr>, scientific_name_ID <chr>, #> #   canonical_name <chr>, row_number <dbl>, number_of_collapsed_taxa <dbl> aligned_gbif_taxa |>    update_taxonomy(taxonomic_splits = \"collapse_to_higher_taxon\",                   resources = resources)  |>    filter(original_name == \"Acacia aneura\") # Subsetting Acacia aneura as an example #> # A tibble: 1 × 21 #>   original_name aligned_name  accepted_name suggested_name        genus family taxon_rank taxonomic_dataset taxonomic_status #>   <chr>         <chr>         <chr>         <chr>                 <chr> <chr>  <chr>      <chr>             <chr>            #> 1 Acacia aneura Acacia aneura Acacia sp.    Acacia sp. [collapse… Acac… Fabac… species    APC               accepted         #> # ℹ 12 more variables: taxonomic_status_aligned <chr>, aligned_reason <chr>, update_reason <chr>, subclass <chr>, #> #   taxon_distribution <chr>, scientific_name <chr>, taxon_ID <chr>, taxon_ID_genus <chr>, scientific_name_ID <chr>, #> #   canonical_name <chr>, row_number <dbl>, number_of_collapsed_taxa <dbl>"},{"path":"https://traitecoevo.github.io/APCalign/articles/data-providers.html","id":"australian-plant-census-apc","dir":"Articles","previous_headings":"","what":"Australian Plant Census (APC)","title":"Data Providers","text":"Australian Plant Census (APC) national taxonomic database accepted names Australian vascular plants. APC includes information synonyms, misapplications , well established status (native/introduced) distribution across states territories. ‘APCalign’ first attempt align plant names scientific names exist APC.","code":""},{"path":"https://traitecoevo.github.io/APCalign/articles/data-providers.html","id":"australian-plant-names-index-apni","dir":"Articles","previous_headings":"","what":"Australian Plant Names Index (APNI)","title":"Data Providers","text":"Australian Plant Names Index (APNI) database containing names used Australian plants scientific literature. primarily used botanical community standardising synonyms. Importantly, APNI provide recommendations taxonomy nomenclature; APC indicates taxonomy considered accepted. ‘APCalign’ uses APNI alignment found APC.","code":""},{"path":"https://traitecoevo.github.io/APCalign/articles/data-providers.html","id":"data-standards-and-meta-data","dir":"Articles","previous_headings":"","what":"Data standards and meta-data","title":"Data Providers","text":"Data APNI APC formatted according Darwin Core standard, widely used data standard biodiversity data. can find meta-data APC APNI : Meta-data APC output Meta-data APNI output details APNI APC, recommend taking read extensive documentation.","code":""},{"path":"https://traitecoevo.github.io/APCalign/articles/reproducibility.html","id":"apcalign-r-package-version","dir":"Articles","previous_headings":"","what":"APCalign R package version","title":"How to be more reproducible with APCalign","text":"determine version APCalign package :","code":"packageVersion(\"APCalign\")"},{"path":"https://traitecoevo.github.io/APCalign/articles/reproducibility.html","id":"taxonomic-resources","dir":"Articles","previous_headings":"","what":"Taxonomic Resources","title":"How to be more reproducible with APCalign","text":"APCalign allows users load static downloads taxonomic resources APC APNI latest version National Species List website. functionality specified using stable_or_current_data argument load_taxonomic_resources(). want taxonomic alignment update reproducible, recommend always use stable_or_current_data = \"stable\". default value stable_or_current_data = \"stable\". static downloads version controlled stored repository releases. default, load_taxonomic_resources() load latest version static downloads. order transparent, recommend check latest default_version alignment copying pasting output load_taxonomic_resources() directly. way makes version taxonomic resources explicit code. ensure specific version taxonomic resources available subsequent functions make sure assign object: alignment update, make sure supply version taxonomic resources using resources argument:","code":"load_taxonomic_resources(stable_or_current_data = \"stable\") load_taxonomic_resources(   stable_or_current_data = \"stable\",   version = default_version() ) default_version() #> [1] \"2024-10-11\" resources_0.0.4.9000 <- load_taxonomic_resources(   stable_or_current_data = \"stable\",   version = \"0.0.4.9000\" ) # Align taxa aligned_taxa <- align_taxa(gbif_lite$species, resources = resources_0.0.4.9000)  # Update taxonomy  updated_taxa <- update_taxonomy(aligned_taxa, resources = resources_0.0.4.9000)  # Align and update all-in-one aligned_updated_taxa <- create_taxonomic_update_lookup(gbif_lite$species, resources = resources_0.0.4.9000)"},{"path":"https://traitecoevo.github.io/APCalign/articles/reproducibility.html","id":"citing-the-r-package","dir":"Articles","previous_headings":"","what":"Citing the R package","title":"How to be more reproducible with APCalign","text":"completion, can also cite R package calling citation(). also research article introducing APCalign, share details citation press.","code":"citation(\"APCalign\") #> To cite package 'APCalign' in publications use: #>  #>   Wenk E, Cornwell W, Fuchs A, Kar F, Monro A, Sauquet H, Stephens R, #>   Falster D (2024). \"APCalign: an R package workflow and app for #>   aligning and updating flora names to the Australian Plant Census.\" #>   _Australian Journal of Botany_. R package version: 1.0.1, #>   <https://www.biorxiv.org/content/10.1101/2024.02.02.578715v1>. #>  #> A BibTeX entry for LaTeX users is #>  #>   @Article{, #>     title = {APCalign: an R package workflow and app for aligning and updating flora names to the Australian Plant Census}, #>     journal = {Australian Journal of Botany}, #>     author = {Elizabeth Wenk and Will Cornwell and Ann Fuchs and Fonti Kar and Anna Monro and Herve Sauquet and Ruby Stephens and Daniel Falster}, #>     year = {2024}, #>     note = {R package version: 1.0.1}, #>     url = {https://www.biorxiv.org/content/10.1101/2024.02.02.578715v1}, #>   }"},{"path":"https://traitecoevo.github.io/APCalign/articles/updating-taxon-names.html","id":"aligning-taxon-names-with-taxon-conceptsnames-in-apc-and-apni","dir":"Articles","previous_headings":"","what":"Aligning taxon names with taxon concepts/names in APC and APNI","title":"Methods for updating taxon names in APCalign","text":"following table indicates rules 51 separate algorithms sequentially applied attempt align submitted name taxon concept APC scientific names APNI. Note, table truncated screen, use horizontal scroll view entire table.","code":""},{"path":"https://traitecoevo.github.io/APCalign/articles/updating-taxon-names.html","id":"updating-taxonomy","dir":"Articles","previous_headings":"","what":"Updating taxonomy","title":"Methods for updating taxon names in APCalign","text":"following table indicates separate functions used : update aligned names accepted names APC add best-practice suggested names submitted names add identifiers taxon concepts (APC) scientific names (APC APNI) Different functions used depending taxon rank aligned name taxonomic dataset name aligned (APC vs APNI). -* genus updated APC accepted genus possible; ** species infraspecific taxon name","code":""},{"path":"https://traitecoevo.github.io/APCalign/articles/updating-taxon-names.html","id":"outputs-of-apcalign","dir":"Articles","previous_headings":"","what":"Outputs of APCalign","title":"Methods for updating taxon names in APCalign","text":"following columns output core function create_taxonomic_update_lookup two component functions align_taxa update_taxonomy.","code":""},{"path":"https://traitecoevo.github.io/APCalign/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Daniel Falster. Author, maintainer, copyright holder. Elizabeth Wenk. Author, contributor. Cornwell. Author, contributor. Fonti Kar. Author, contributor. Carl Boettiger. Contributor.","code":""},{"path":"https://traitecoevo.github.io/APCalign/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wenk E, Cornwell W, Fuchs , Kar F, Monro , Sauquet H, Stephens R, Falster D (2024). “APCalign: R package workflow app aligning updating flora names Australian Plant Census.” Australian Journal Botany. R package version: 1.0.1, https://www.biorxiv.org/content/10.1101/2024.02.02.578715v1.","code":"@Article{,   title = {APCalign: an R package workflow and app for aligning and updating flora names to the Australian Plant Census},   journal = {Australian Journal of Botany},   author = {Elizabeth Wenk and Will Cornwell and Ann Fuchs and Fonti Kar and Anna Monro and Herve Sauquet and Ruby Stephens and Daniel Falster},   year = {2024},   note = {R package version: 1.0.1},   url = {https://www.biorxiv.org/content/10.1101/2024.02.02.578715v1}, }"},{"path":"https://traitecoevo.github.io/APCalign/index.html","id":"apcalign-","dir":"","previous_headings":"","what":"Resolving Plant Taxon Names Using the Australian Plant Census","title":"Resolving Plant Taxon Names Using the Australian Plant Census","text":"APCalign uses Australian Plant Census (APC) Australian Plant Name Index align update Australian plant taxon name strings. ‘APCalign’ also supplies information established status (native/introduced) plant taxa across different states/territories. ’s useful updating species list intersecting APC consensus understanding established status (native/introduced).","code":""},{"path":"https://traitecoevo.github.io/APCalign/index.html","id":"installation-️","dir":"","previous_headings":"","what":"Installation 🛠️","title":"Resolving Plant Taxon Names Using the Australian Plant Census","text":"CRAN: GitHub version:","code":"install.packages(\"APCalign\")  library(APCalign) install.packages(\"remotes\") remotes::install_github(\"traitecoevo/APCalign\")"},{"path":"https://traitecoevo.github.io/APCalign/index.html","id":"a-quick-demo","dir":"","previous_headings":"","what":"A quick demo","title":"Resolving Plant Taxon Names Using the Australian Plant Census","text":"Generating look-table can done just one function: ’re going use APCalign , save time load taxonomic resources memory first: Checking list species see classified Australian natives: Getting family lookup table genera specified taxonomy:","code":"create_taxonomic_update_lookup(    taxa = c(     \"Banksia integrifolia\",     \"Acacia longifolia\",     \"Commersonia rosea\"     ) ) #> ================================================================================================================================================================ #> # A tibble: 3 × 12 #>   original_name       aligned_name accepted_name suggested_name genus taxon_rank #>   <chr>               <chr>        <chr>         <chr>          <chr> <chr>      #> 1 Banksia integrifol… Banksia int… Banksia inte… Banksia integ… Bank… species    #> 2 Acacia longifolia   Acacia long… Acacia longi… Acacia longif… Acac… species    #> 3 Commersonia rosea   Commersonia… Androcalva r… Androcalva ro… Andr… species    #> # ℹ 6 more variables: taxonomic_dataset <chr>, taxonomic_status <chr>, #> #   scientific_name <chr>, aligned_reason <chr>, update_reason <chr>, #> #   number_of_collapsed_taxa <dbl> tax_resources <- load_taxonomic_resources() #> ================================================================================================================================================================  create_taxonomic_update_lookup(    taxa = c(     \"Banksia integrifolia\",     \"Acacia longifolia\",     \"Commersonia rosea\",     \"not a species\"     ),   resources = tax_resources ) #> # A tibble: 4 × 12 #>   original_name       aligned_name accepted_name suggested_name genus taxon_rank #>   <chr>               <chr>        <chr>         <chr>          <chr> <chr>      #> 1 Banksia integrifol… Banksia int… Banksia inte… Banksia integ… Bank… species    #> 2 Acacia longifolia   Acacia long… Acacia longi… Acacia longif… Acac… species    #> 3 Commersonia rosea   Commersonia… Androcalva r… Androcalva ro… Andr… species    #> 4 not a species       <NA>         <NA>          <NA>           <NA>  <NA>       #> # ℹ 6 more variables: taxonomic_dataset <chr>, taxonomic_status <chr>, #> #   scientific_name <chr>, aligned_reason <chr>, update_reason <chr>, #> #   number_of_collapsed_taxa <dbl> native_anywhere_in_australia(c(\"Eucalyptus globulus\",\"Pinus radiata\"), resources = tax_resources) #> # A tibble: 2 × 2 #>   species             native_anywhere_in_aus #>   <chr>               <chr>                  #> 1 Eucalyptus globulus native                 #> 2 Pinus radiata       introduced get_apc_genus_family_lookup(c(\"Eucalyptus\",                               \"Pinus\",                               \"Actinotus\",                               \"Banksia\",                               \"Acacia\",                               \"Triodia\"),                              resources = tax_resources) #> # A tibble: 6 × 2 #>   genus      family     #>   <chr>      <chr>      #> 1 Eucalyptus Myrtaceae  #> 2 Pinus      Pinaceae   #> 3 Actinotus  Apiaceae   #> 4 Banksia    Proteaceae #> 5 Acacia     Fabaceae   #> 6 Triodia    Poaceae"},{"path":[]},{"path":"https://traitecoevo.github.io/APCalign/index.html","id":"learn-more-","dir":"","previous_headings":"","what":"Learn more 📚","title":"Resolving Plant Taxon Names Using the Australian Plant Census","text":"Highly recommend looking Getting Started vignette learn use APCalign. can also learn taxa matching algorithm.","code":""},{"path":"https://traitecoevo.github.io/APCalign/index.html","id":"show-us-support-","dir":"","previous_headings":"","what":"Show us support 💛","title":"Resolving Plant Taxon Names Using the Australian Plant Census","text":"Please consider citing work, really proud !","code":"citation(\"APCalign\") #> To cite package 'APCalign' in publications use: #>  #>   Wenk E, Cornwell W, Fuchs A, Kar F, Monro A, Sauquet H, Stephens R, #>   Falster D (2024). \"APCalign: an R package workflow and app for #>   aligning and updating flora names to the Australian Plant Census.\" #>   _Australian Journal of Botany_. R package version: 1.0.1, #>   <https://www.biorxiv.org/content/10.1101/2024.02.02.578715v1>. #>  #> A BibTeX entry for LaTeX users is #>  #>   @Article{, #>     title = {APCalign: an R package workflow and app for aligning and updating flora names to the Australian Plant Census}, #>     journal = {Australian Journal of Botany}, #>     author = {Elizabeth Wenk and Will Cornwell and Ann Fuchs and Fonti Kar and Anna Monro and Herve Sauquet and Ruby Stephens and Daniel Falster}, #>     year = {2024}, #>     note = {R package version: 1.0.1}, #>     url = {https://www.biorxiv.org/content/10.1101/2024.02.02.578715v1}, #>   }"},{"path":"https://traitecoevo.github.io/APCalign/index.html","id":"found-a-bug-","dir":"","previous_headings":"","what":"Found a bug? 🐛","title":"Resolving Plant Taxon Names Using the Australian Plant Census","text":"come across unexpected taxon name change? Elusive error can’t debug - submit issue try best help.","code":""},{"path":"https://traitecoevo.github.io/APCalign/index.html","id":"comments-and-contributions","dir":"","previous_headings":"","what":"Comments and contributions","title":"Resolving Plant Taxon Names Using the Australian Plant Census","text":"welcome comments contributions package, start submit issue can take !","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/APCalign.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardising Taxonomic Names in Australian Plants — APCalign","title":"Standardising Taxonomic Names in Australian Plants — APCalign","text":"process standardising taxon names necessary working biodiversity data. 'APCalign' uses Australian Plant Name Index (APNI) Australian Plant Census (APC) align update plant taxon names current, accepted standards. 'APCalign' can also supply information established status plant taxa across different states/territories.","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/APCalign.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Standardising Taxonomic Names in Australian Plants — APCalign","text":"Standarise taxon names load_taxonomic_resources create_taxonomic_update_lookup align_taxa update_taxonomy Established status region state_diversity_counts create_species_state_origin_matrix native_anywhere_in_australia","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/APCalign.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Standardising Taxonomic Names in Australian Plants — APCalign","text":"questions, comments suggestions, please submit issue GitHub repository","code":""},{"path":[]},{"path":"https://traitecoevo.github.io/APCalign/reference/APCalign.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Standardising Taxonomic Names in Australian Plants — APCalign","text":"Maintainer: Daniel Falster daniel.falster@unsw.edu.au (ORCID) [copyright holder] Authors: Elizabeth Wenk e.wenk@unsw.edu.au (ORCID) [contributor] Cornwell w.cornwell@unsw.edu.au (ORCID) [contributor] Fonti Kar f.kar@unsw.edu.au (ORCID) [contributor] contributors: Carl Boettiger cboettig@gmail.com (ORCID) [contributor]","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/align_taxa.html","id":null,"dir":"Reference","previous_headings":"","what":"Align Australian plant scientific names to the APC or APNI — align_taxa","title":"Align Australian plant scientific names to the APC or APNI — align_taxa","text":"list Australian plant names, find taxonomic scientific name alignments APC APNI standardizing formatting fixing spelling errors. Usage case: Users run function wish see details matching algorithms, many output columns matching function compares seeks best alignment. may also select function want adjust “fuzziness” level fuzzy matches, options allowed create_taxonomic_update_lookup. function first half create_taxonomic_update_lookup.","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/align_taxa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Align Australian plant scientific names to the APC or APNI — align_taxa","text":"","code":"align_taxa(   original_name,   output = NULL,   full = FALSE,   resources = load_taxonomic_resources(),   quiet = FALSE,   fuzzy_abs_dist = 3,   fuzzy_rel_dist = 0.2,   fuzzy_matches = TRUE,   imprecise_fuzzy_matches = FALSE,   APNI_matches = TRUE,   identifier = NA_character_ )"},{"path":"https://traitecoevo.github.io/APCalign/reference/align_taxa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Align Australian plant scientific names to the APC or APNI — align_taxa","text":"original_name list names query taxonomic alignments. output (optional) name file save results . full Parameter determine many columns output resources taxonomic resources used align taxa names. Loading can slow, call load_taxonomic_resources separately greatly speed function pass resources . quiet Logical indicate whether display messages aligning taxa. fuzzy_abs_dist number characters allowed different fuzzy match. fuzzy_rel_dist proportion characters allowed different fuzzy match. fuzzy_matches Fuzzy matches turned default. relative absolute distances allowed fuzzy matches species infraspecific taxon names defined parameters fuzzy_abs_dist fuzzy_rel_dist imprecise_fuzzy_matches Imprecise fuzzy matches uses fuzzy matching function lenient levels set (absolute distance 5 characters; relative distance = 0.25). offers way get wider range possible names, possibly corresponding distant spelling mistakes. FALSE default outputs checked often makes erroneous matches. APNI_matches Name matches APNI (Australian Plant Names Index) turned default. identifier dataset, location identifier, defaults NA.","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/align_taxa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Align Australian plant scientific names to the APC or APNI — align_taxa","text":"tibble columns include original_name, aligned_name, taxonomic_dataset, taxon_rank, aligned_reason, alignment_code. original_name: original plant name input. aligned_name: original plant name function standardise_names standardised syntax infraspecific taxon designations. taxonomic_dataset: source aligned names (APC APNI). taxon_rank: taxonomic rank aligned name. aligned_reason: explanation specific taxon name alignment (original name aligned name). alignment_code: code accompanies aligned_reason, indicating relative sequence match alignment process. cleaned_name: original name punctuation infraspecific taxon designation terms standardised function standardise_names; streamlines exact matches. stripped_name: cleaned name punctuation infraspecific taxon designation terms removed function strip_names; improves fuzzy matches. stripped_name2: cleaned name punctuation, infraspecific taxon designation terms, filler words removed function strip_names_extra; required matches first two word first three words. trinomial: first three words stripped_name2, required matches ignore text original_name; improves phrase name matches. binomial: first two words stripped_name2, required matches ignore text original_name; improves phrase name matches. genus: first two words cleaned_name; required genus-rank matches reprocessing genus-rank names. fuzzy_match_genus: fuzzy match genus column best match among APC-accepted names; required fuzzy matches genus-rank names. fuzzy_match_genus_synonym: fuzzy match genus column best match among APC-synonymous names, considering different matches documented APC-accepted genera; required fuzzy matches genus-rank names. fuzzy_match_genus_APNI: fuzzy match genus column best match among APNI names, considering different matches documented APC-accepted APC-known genera; required fuzzy matches genus-rank names. fuzzy_match_family: fuzzy match genus column best match among APC-accepted family names; required fuzzy matches family-rank names. fuzzy_match_family_synonym: fuzzy match genus column best match among APC-synonymous family names; required fuzzy matches family-rank names. fuzzy_match_cleaned_APC: fuzzy match stripped_name APC-accepted names; created yet---aligned names match step 05a function match_taxa. fuzzy_match_cleaned_APC_synonym: fuzzy match stripped_name APC-synonymous names; created yet---aligned names match step 05b function match_taxa. fuzzy_match_cleaned_APC_imprecise: imprecise fuzzy match stripped_name APC-accepted names; created yet---aligned names match step 07a function match_taxa. fuzzy_match_cleaned_APC_synonym_imprecise: imprecise fuzzy match stripped_name APC-accepted names; created yet---aligned names match step 07b function match_taxa. fuzzy_match_binomial: fuzzy match binomial column best match among APC-accepted names; created yet---aligned names match step 10c function match_taxa. fuzzy_match_binomial_APC_synonym: fuzzy match binomial column best match among APC-synonymous names; created yet---aligned names match step 10d function match_taxa. fuzzy_match_trinomial: fuzzy match trinomial column best match among APC-accepted names; created yet---aligned names match step 09c function match_taxa. fuzzy_match_trinomial_synonym: fuzzy match trinomial column best match among APC-synonymous names; created yet---aligned names match step 09d function match_taxa. fuzzy_match_cleaned_APNI: fuzzy match stripped_name APNI names; created yet---aligned names match step 11a function match_taxa. fuzzy_match_cleaned_APNI_imprecise: imprecise fuzzy match stripped_name APNI names; created yet---aligned names match step 11b function match_taxa.","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/align_taxa.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Align Australian plant scientific names to the APC or APNI — align_taxa","text":"function finds taxonomic alignments APC scientific name alignments APNI. uses internal function match_taxa attempt match input strings taxon names APC/APNI. sequentially searches matches 20 different string patterns, prioritising exact matches (accepted names well synonyms, orthographic variants) fuzzy matches. prioritises matches taxa APC names APNI. identifies string patterns input names suggest name can aligned genus (hybrids APC/APNI; graded species; taxa identified species), indicates names genus-rank match. Notes: running function APCalign::create_taxonomic_update_lookup many times, best load taxonomic resources separately using resources <- load_taxonomic_resources(), add argument resources = resources name Banksia cerrata align fuzzy matching algorithm allow first letter genus species epithet change. function option changing fuzzy matching parameters. defaults, fuzzy matches allowing changes 3 (fewer) characters 20% (less) characters carefully calibrated catch just typos, , rarely mis-align name. wish introduce less conservative fuzzy matching recommended manually check aligned names. recommended begin imprecise_fuzzy_matches = FALSE (default), quite less precise fuzzy matches likely erroneous. argument turned plan check alignments manually. argument identifier allows add fix text string genus- family- level names, identifier = \"Royal NP\" return \"Acacia sp. [Royal NP]\".","code":""},{"path":[]},{"path":"https://traitecoevo.github.io/APCalign/reference/align_taxa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Align Australian plant scientific names to the APC or APNI — align_taxa","text":"","code":"# \\donttest{  resources <- load_taxonomic_resources() #> Downloading... #> File downloaded successfully. #> File downloaded successfully. #>  #> Loading resources into memory... #>  =========================== ===================================================== ================================================================================ #> ...done  # example 1 align_taxa(c(\"Poa annua\", \"Abies alba\"), resources=resources) #> Checking alignments of 2 taxa #>   -> of these 1 names have a perfect match to a scientific name in the APC.  #>       Alignments being sought for remaining names. #> # A tibble: 2 × 7 #>   original_name cleaned_name aligned_name taxonomic_dataset taxon_rank #>   <chr>         <chr>        <chr>        <chr>             <chr>      #> 1 Poa annua     Poa annua    Poa annua    APC               species    #> 2 Abies alba    Abies alba   NA           NA                NA         #> # ℹ 2 more variables: aligned_reason <chr>, alignment_code <chr>  # example 2 input <- c(\"Banksia serrata\", \"Banksia serrate\", \"Banksia cerrata\",  \"Banksia serrrrata\", \"Dryandra sp.\", \"Banksia big red flowers\")  aligned_taxa <-   APCalign::align_taxa(     original_name = input,     identifier = \"APCalign test\",     full = TRUE,     resources=resources   )  #> Checking alignments of 6 taxa #>   -> of these 1 names have a perfect match to a scientific name in the APC.  #>       Alignments being sought for remaining names.    # }"},{"path":"https://traitecoevo.github.io/APCalign/reference/create_species_state_origin_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"State level native and introduced origin status — create_species_state_origin_matrix","title":"State level native and introduced origin status — create_species_state_origin_matrix","text":"function uses taxon distribution data APC determine state level native introduced origin status. function processes geographic data available APC returns state level native, introduced complicated origins status taxa.","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/create_species_state_origin_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"State level native and introduced origin status — create_species_state_origin_matrix","text":"","code":"create_species_state_origin_matrix(resources = load_taxonomic_resources())"},{"path":"https://traitecoevo.github.io/APCalign/reference/create_species_state_origin_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"State level native and introduced origin status — create_species_state_origin_matrix","text":"resources taxonomic resources required make summary statistics. Loading can slow, call load_taxonomic_resources separately greatly speed function pass resources .","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/create_species_state_origin_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"State level native and introduced origin status — create_species_state_origin_matrix","text":"tibble columns representing state rows representing species. values cell represent origin species state.","code":""},{"path":[]},{"path":"https://traitecoevo.github.io/APCalign/reference/create_species_state_origin_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"State level native and introduced origin status — create_species_state_origin_matrix","text":"","code":"create_species_state_origin_matrix() #>  #> Loading resources into memory... #>  =========================== ===================================================== ================================================================================ #> ...done #> # A tibble: 26,273 × 19 #>    species     NT    Qld   WA    ChI   NSW   SA    Vic   Tas   ACT   NI    LHI   #>    <chr>       <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> #>  1 Cycas angu… nati… nati… not … not … not … not … not … not … not … not … not … #>  2 Cycas aren… nati… not … not … not … not … not … not … not … not … not … not … #>  3 Cycas arms… nati… not … not … not … not … not … not … not … not … not … not … #>  4 Cycas arnh… nati… not … not … not … not … not … not … not … not … not … not … #>  5 Cycas bade… not … nati… not … not … not … not … not … not … not … not … not … #>  6 Cycas basa… not … not … nati… not … not … not … not … not … not … not … not … #>  7 Cycas brun… nati… nati… not … not … not … not … not … not … not … not … not … #>  8 Cycas cair… not … nati… not … not … not … not … not … not … not … not … not … #>  9 Cycas calc… nati… not … not … not … not … not … not … not … not … not … not … #> 10 Cycas cana… nati… not … not … not … not … not … not … not … not … not … not … #> # ℹ 26,263 more rows #> # ℹ 7 more variables: MI <chr>, HI <chr>, MDI <chr>, CoI <chr>, CSI <chr>, #> #   AR <chr>, CaI <chr>"},{"path":"https://traitecoevo.github.io/APCalign/reference/create_taxonomic_update_lookup.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a table with the best-possible scientific name match for Australian plant names — create_taxonomic_update_lookup","title":"Create a table with the best-possible scientific name match for Australian plant names — create_taxonomic_update_lookup","text":"function takes list Australian plant names need reconciled current taxonomy generates lookup table best-possible scientific name match input name. Usage case: APCalign’s core function, merging together alignment updating taxonomy.","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/create_taxonomic_update_lookup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a table with the best-possible scientific name match for Australian plant names — create_taxonomic_update_lookup","text":"","code":"create_taxonomic_update_lookup(   taxa,   stable_or_current_data = \"stable\",   version = default_version(),   taxonomic_splits = \"most_likely_species\",   full = FALSE,   fuzzy_abs_dist = 3,   fuzzy_rel_dist = 0.2,   fuzzy_matches = TRUE,   APNI_matches = TRUE,   imprecise_fuzzy_matches = FALSE,   identifier = NA_character_,   resources = load_taxonomic_resources(quiet = quiet),   quiet = FALSE,   output = NULL )"},{"path":"https://traitecoevo.github.io/APCalign/reference/create_taxonomic_update_lookup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a table with the best-possible scientific name match for Australian plant names — create_taxonomic_update_lookup","text":"taxa list Australian plant species needs reconciled current taxonomy. stable_or_current_data either \"stable\" consistent version, \"current\" leading edge version. version version number dataset use. taxonomic_splits handle one_to_many taxonomic matches. Default \"return_all\".  options \"collapse_to_higher_taxon\" \"most_likely_species\". most_likely_species defaults original_name name accepted APC; right certain species subsets, make errors cases, use caution. full logical whether full lookup table returned just key columns fuzzy_abs_dist number characters allowed different fuzzy match. fuzzy_rel_dist proportion characters allowed different fuzzy match. fuzzy_matches Fuzzy matches turned default. relative absolute distances allowed fuzzy matches species infraspecific taxon names defined parameters fuzzy_abs_dist fuzzy_rel_dist. APNI_matches Name matches APNI (Australian Plant Names Index) turned default. imprecise_fuzzy_matches Imprecise fuzzy matches uses fuzzy matching function lenient levels set (absolute distance 5 characters; relative distance = 0.25). offers way get wider range possible names, possibly corresponding distant spelling mistakes. FALSE default outputs checked often makes erroneous matches. identifier dataset, location identifier, defaults NA. resources taxonomic resources used cleaning, default loading local place computer. called repeatedly, much faster load resources using load_taxonomic_resources separately pass data . quiet Logical indicate whether display messages loading data aligning taxa. output file path save output. file already exists, function check subset species passed try add file. can useful large growing projects.","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/create_taxonomic_update_lookup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a table with the best-possible scientific name match for Australian plant names — create_taxonomic_update_lookup","text":"lookup table containing accepted suggested names original name input, additional taxonomic information taxon rank, taxonomic status, taxon IDs genera. original_name: original plant name. aligned_name: input plant name aligned taxon name APC APNI align_taxa function. accepted_name: APC-accepted plant name, available. suggested_name: suggested plant name use. Identical accepted_name, accepted_name exists; otherwise suggested_name aligned_name. genus: genus accepted (suggested) name; APC-accepted genus names filled . family: family accepted (suggested) name; APC-accepted family names filled . taxon_rank: taxonomic rank suggested (accepted) name. taxonomic_dataset: source suggested (accepted) names (APC APNI). taxonomic_status: taxonomic status suggested (accepted) name. taxonomic_status_aligned: taxonomic status aligned name, taxonomic updates applied. aligned_reason: explanation specific taxon name alignment (original name aligned name). update_reason: explanation specific taxon name update (aligned name accepted suggested name). subclass: subclass accepted name. taxon_distribution: distribution accepted name; filled APC accepted_name available. scientific_name_authorship: authorship information accepted (synonymous) name; available APC APNI names. taxon_ID: unique taxon concept identifier accepted_name; filled APC accepted_name available. taxon_ID_genus: identifier genus; filled APC-accepted genus name available. scientific_name_ID: identifier nomenclatural (taxonomic) details scientific name; available APC APNI names. row_number: row number specific original_name input. number_of_collapsed_taxa: taxonomic_splits == \"collapse_to_higher_taxon\", number possible taxon names collapsed.","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/create_taxonomic_update_lookup.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a table with the best-possible scientific name match for Australian plant names — create_taxonomic_update_lookup","text":"uses first function align_taxa, function update_taxonomy achieve output. aligned name plant name aligned taxon name APC APNI align_taxa function. Notes: running function APCalign::create_taxonomic_update_lookup many times, best load taxonomic resources separately using resources <- load_taxonomic_resources(), add argument resources = resources name Banksia cerrata align fuzzy matching algorithm allow first letter genus species epithet change. argument taxonomic_splits allows choose outcome updating names taxa ambiguous taxonomic histories; applies scientific names attached broadly circumscribed taxon concept, split several narrowly circumscribed taxon concepts, one retains original name. three options: most_likely_species returns name retained, alternative names documented square brackets; return_all adds additional rows output, one possible taxon concept; collapse_to_higher_taxon returns genus possible names square brackets. argument identifier allows add fix text string genus- family- level names, identifier = \"Royal NP\" return Acacia sp. \\[Royal NP].","code":""},{"path":[]},{"path":"https://traitecoevo.github.io/APCalign/reference/create_taxonomic_update_lookup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a table with the best-possible scientific name match for Australian plant names — create_taxonomic_update_lookup","text":"","code":"# \\donttest{ resources <- load_taxonomic_resources() #>  #> Loading resources into memory... #>  =========================== ===================================================== ================================================================================ #> ...done  # example 1 create_taxonomic_update_lookup(c(\"Eucalyptus regnans\",                                  \"Acacia melanoxylon\",                                  \"Banksia integrifolia\",                                  \"Not a species\"),                                  resources = resources) #> Checking alignments of 4 taxa #>   -> of these 3 names have a perfect match to a scientific name in the APC.  #>       Alignments being sought for remaining names. #> # A tibble: 4 × 12 #>   original_name       aligned_name accepted_name suggested_name genus taxon_rank #>   <chr>               <chr>        <chr>         <chr>          <chr> <chr>      #> 1 Eucalyptus regnans  Eucalyptus … Eucalyptus r… Eucalyptus re… Euca… species    #> 2 Acacia melanoxylon  Acacia mela… Acacia melan… Acacia melano… Acac… species    #> 3 Banksia integrifol… Banksia int… Banksia inte… Banksia integ… Bank… species    #> 4 Not a species       NA           NA            NA             NA    NA         #> # ℹ 6 more variables: taxonomic_dataset <chr>, taxonomic_status <chr>, #> #   scientific_name <chr>, aligned_reason <chr>, update_reason <chr>, #> #   number_of_collapsed_taxa <dbl>                                   # example 2 input <- c(\"Banksia serrata\", \"Banksia serrate\", \"Banksia cerrata\",  \"Banksea serrata\", \"Banksia serrrrata\", \"Dryandra\")  create_taxonomic_update_lookup(     taxa = input,     identifier = \"APCalign test\",     full = TRUE,     resources = resources   ) #> Checking alignments of 6 taxa #>   -> of these 1 names have a perfect match to a scientific name in the APC.  #>       Alignments being sought for remaining names. #> # A tibble: 6 × 21 #>   original_name     aligned_name       accepted_name suggested_name genus family #>   <chr>             <chr>              <chr>         <chr>          <chr> <chr>  #> 1 Banksia serrata   Banksia serrata    Banksia serr… Banksia serra… Bank… Prote… #> 2 Banksia serrate   Banksia serrata    Banksia serr… Banksia serra… Bank… Prote… #> 3 Banksia cerrata   Banksia sp. [Bank… NA            Banksia sp. [… Bank… Prote… #> 4 Banksea serrata   Banksia serrata    Banksia serr… Banksia serra… Bank… Prote… #> 5 Banksia serrrrata Banksia serrata    Banksia serr… Banksia serra… Bank… Prote… #> 6 Dryandra          Dryandra sp. [Dry… NA            Banksia sp. [… Bank… Prote… #> # ℹ 15 more variables: taxon_rank <chr>, taxonomic_dataset <chr>, #> #   taxonomic_status <chr>, taxonomic_status_aligned <chr>, #> #   aligned_reason <chr>, update_reason <chr>, subclass <chr>, #> #   taxon_distribution <chr>, scientific_name <chr>, taxon_ID <chr>, #> #   taxon_ID_genus <chr>, scientific_name_ID <chr>, canonical_name <chr>, #> #   row_number <dbl>, number_of_collapsed_taxa <dbl>  # example 3 taxon_list <-   readr::read_csv(   system.file(\"extdata\", \"test_taxa.csv\", package = \"APCalign\"),   show_col_types = FALSE)  create_taxonomic_update_lookup(     taxa = taxon_list$original_name,     identifier = taxon_list$notes,     full = TRUE,     resources = resources   ) #> Checking alignments of 32 taxa #>   -> of these 10 names have a perfect match to a scientific name in the APC.  #>       Alignments being sought for remaining names. #> # A tibble: 32 × 21 #>    original_name          aligned_name accepted_name suggested_name genus family #>    <chr>                  <chr>        <chr>         <chr>          <chr> <chr>  #>  1 Banksia serrata        Banksia ser… Banksia serr… Banksia serra… Bank… Prote… #>  2 Banksia serrate        Banksia ser… Banksia serr… Banksia serra… Bank… Prote… #>  3 Banksee serrate        Banksia ser… Banksia serr… Banksia serra… Bank… Prote… #>  4 Banksia cerrata        Banksia sp.… NA            Banksia sp. [… Bank… Prote… #>  5 Banksia sp.            Banksia sp.… NA            Banksia sp. [… Bank… Prote… #>  6 Dryandra sp.           Dryandra sp… NA            Banksia sp. [… Bank… Prote… #>  7 Argyrodendron (Whyanb… Argyrodendr… Argyrodendro… Argyrodendron… Argy… Malva… #>  8 Argyrodendron ssp. (W… Argyrodendr… Argyrodendro… Argyrodendron… Argy… Malva… #>  9 Argyrodendron Whyanbe… Argyrodendr… Argyrodendro… Argyrodendron… Argy… Malva… #> 10 Argyrodendron sp. (Wh… Argyrodendr… Argyrodendro… Argyrodendron… Argy… Malva… #> # ℹ 22 more rows #> # ℹ 15 more variables: taxon_rank <chr>, taxonomic_dataset <chr>, #> #   taxonomic_status <chr>, taxonomic_status_aligned <chr>, #> #   aligned_reason <chr>, update_reason <chr>, subclass <chr>, #> #   taxon_distribution <chr>, scientific_name <chr>, taxon_ID <chr>, #> #   taxon_ID_genus <chr>, scientific_name_ID <chr>, canonical_name <chr>, #> #   row_number <dbl>, number_of_collapsed_taxa <dbl> # }"},{"path":"https://traitecoevo.github.io/APCalign/reference/default_version.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the default version for stable data — default_version","title":"Get the default version for stable data — default_version","text":"function returns default version stable data, used version specified.","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/default_version.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the default version for stable data — default_version","text":"","code":"default_version()"},{"path":"https://traitecoevo.github.io/APCalign/reference/default_version.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the default version for stable data — default_version","text":"character string representing default version stable data.","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/default_version.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the default version for stable data — default_version","text":"","code":"default_version() #> [1] \"2024-10-11\""},{"path":"https://traitecoevo.github.io/APCalign/reference/gbif_lite.html","id":null,"dir":"Reference","previous_headings":"","what":"GBIF Australian Plant Data — gbif_lite","title":"GBIF Australian Plant Data — gbif_lite","text":"subset plant data Global Biodiversity Information Facility","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/gbif_lite.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GBIF Australian Plant Data — gbif_lite","text":"","code":"gbif_lite"},{"path":"https://traitecoevo.github.io/APCalign/reference/gbif_lite.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"GBIF Australian Plant Data — gbif_lite","text":"gbif_lite tibble 129 rows 7 columns: species name first species scientificname infraspecificepithet name lowest terminal infraspecific epithet scientificname taxonrank taxonomic rank specific name decimalLongitude Longitude decimal degrees decimalLatitude Latitude decimal degrees scientificname Scientific Name verbatimscientificname Scientific name appeared original record","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/gbif_lite.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"GBIF Australian Plant Data — gbif_lite","text":"https://www.gbif.org/","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/get_apc_genus_family_lookup.html","id":null,"dir":"Reference","previous_headings":"","what":"Lookup Family by Genus from APC — get_apc_genus_family_lookup","title":"Lookup Family by Genus from APC — get_apc_genus_family_lookup","text":"Retrieve family name given genus using taxonomic data Australian Plant Census (APC).","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/get_apc_genus_family_lookup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lookup Family by Genus from APC — get_apc_genus_family_lookup","text":"","code":"get_apc_genus_family_lookup(genus, resources = load_taxonomic_resources())"},{"path":"https://traitecoevo.github.io/APCalign/reference/get_apc_genus_family_lookup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lookup Family by Genus from APC — get_apc_genus_family_lookup","text":"genus character vector genus names retrieve corresponding family names. resources taxonomic resources required make lookup. Loading can slow, call load_taxonomic_resources separately speed function pass resources .","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/get_apc_genus_family_lookup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lookup Family by Genus from APC — get_apc_genus_family_lookup","text":"data frame two columns: \"genus\", indicating genus name, \"family\", indicating corresponding family name APC.","code":""},{"path":[]},{"path":"https://traitecoevo.github.io/APCalign/reference/get_apc_genus_family_lookup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lookup Family by Genus from APC — get_apc_genus_family_lookup","text":"","code":"get_apc_genus_family_lookup(genus = c(\"Acacia\", \"Eucalyptus\")) #>  #> Loading resources into memory... #>  =========================== ===================================================== ================================================================================ #> ...done #> # A tibble: 2 × 2 #>   genus      family    #>   <chr>      <chr>     #> 1 Acacia     Fabaceae  #> 2 Eucalyptus Myrtaceae"},{"path":"https://traitecoevo.github.io/APCalign/reference/get_versions.html","id":null,"dir":"Reference","previous_headings":"","what":"Which versions of taxonomic resources are available? — get_versions","title":"Which versions of taxonomic resources are available? — get_versions","text":"versions taxonomic resources available?","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/get_versions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Which versions of taxonomic resources are available? — get_versions","text":"","code":"get_versions()"},{"path":"https://traitecoevo.github.io/APCalign/reference/get_versions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Which versions of taxonomic resources are available? — get_versions","text":"tibble dates APC/APNI resources downloaded Github Release","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/get_versions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Which versions of taxonomic resources are available? — get_versions","text":"","code":"get_versions() #> # A tibble: 10 × 1 #>    versions   #>    <chr>      #>  1 2024-10-11 #>  2 2024-09-25 #>  3 2024-09-05 #>  4 2024-07-31 #>  5 2024-05-29 #>  6 2024-05-10 #>  7 2024-04-29 #>  8 2024-04-11 #>  9 2023-04-18 #> 10 2023-02-28"},{"path":"https://traitecoevo.github.io/APCalign/reference/load_taxonomic_resources.html","id":null,"dir":"Reference","previous_headings":"","what":"Load taxonomic reference lists, APC & APNI — load_taxonomic_resources","title":"Load taxonomic reference lists, APC & APNI — load_taxonomic_resources","text":"function loads two taxonomic datasets Australia's vascular plants, APC APNI, global environment. creates several data frames filtering selecting data loaded lists.","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/load_taxonomic_resources.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load taxonomic reference lists, APC & APNI — load_taxonomic_resources","text":"","code":"load_taxonomic_resources(   stable_or_current_data = \"stable\",   version = default_version(),   quiet = FALSE )"},{"path":"https://traitecoevo.github.io/APCalign/reference/load_taxonomic_resources.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load taxonomic reference lists, APC & APNI — load_taxonomic_resources","text":"stable_or_current_data Type dataset access. default \"stable\", loads dataset github archived file. set \"current\", dataset loaded URL cutting edge version, may change time without notice. version version number dataset use. Defaults default version. quiet logical indicating whether print status loading screen. Defaults FALSE.","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/load_taxonomic_resources.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load taxonomic reference lists, APC & APNI — load_taxonomic_resources","text":"taxonomic resources data loaded global environment.","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/load_taxonomic_resources.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load taxonomic reference lists, APC & APNI — load_taxonomic_resources","text":"accesses taxonomic data dataset using provided version number default version. output several dataframes include subsets APC/APNI based taxon rank taxonomic status.","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/load_taxonomic_resources.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load taxonomic reference lists, APC & APNI — load_taxonomic_resources","text":"","code":"# \\donttest{ load_taxonomic_resources(stable_or_current_data=\"stable\",  version=\"2024-10-11\")# } #>  #> Loading resources into memory... #>  =========================== ===================================================== ================================================================================ #> ...done #> $APC #> # A tibble: 109,883 × 38 #>    taxon_ID                 name_type accepted_name_usage_ID accepted_name_usage #>    <chr>                    <chr>     <chr>                  <chr>               #>  1 https://id.biodiversity… scientif… https://id.biodiversi… Plantae Haeckel     #>  2 https://id.biodiversity… scientif… https://id.biodiversi… Charophyta Sachs    #>  3 https://id.biodiversity… scientif… https://id.biodiversi… Charophyta Sachs    #>  4 https://id.biodiversity… scientif… https://id.biodiversi… Equisetopsida C.Ag… #>  5 https://id.biodiversity… scientif… https://id.biodiversi… Equisetopsida C.Ag… #>  6 https://id.biodiversity… scientif… https://id.biodiversi… Equisetopsida C.Ag… #>  7 https://id.biodiversity… scientif… https://id.biodiversi… Cycadidae Pax       #>  8 https://id.biodiversity… scientif… https://id.biodiversi… Cycadales Pers. ex… #>  9 https://id.biodiversity… scientif… https://id.biodiversi… Cycadales Pers. ex… #> 10 https://id.biodiversity… scientif… https://id.biodiversi… Cycadales Pers. ex… #> # ℹ 109,873 more rows #> # ℹ 34 more variables: nomenclaturalStatus <chr>, nomIlleg <chr>, #> #   nomInval <chr>, taxonomic_status <chr>, pro_parte <lgl>, #> #   scientific_name <chr>, scientific_name_ID <chr>, canonical_name <chr>, #> #   scientific_name_authorship <chr>, parentNameUsageID <chr>, #> #   taxon_rank <chr>, taxon_rank_sort_order <dbl>, kingdom <chr>, class <chr>, #> #   subclass <chr>, family <chr>, taxonConceptID <chr>, … #>  #> $APNI #> # A tibble: 24,562 × 48 #>    scientific_name_ID               name_type scientific_name scientificNameHTML #>    <chr>                            <chr>     <chr>           <chr>              #>  1 https://id.biodiversity.org.au/… autonym   Acanthus ebrac… <scientific><name… #>  2 https://id.biodiversity.org.au/… autonym   Acanthus ilici… <scientific><name… #>  3 https://id.biodiversity.org.au/… scientif… Acanthus ilici… <scientific><name… #>  4 https://id.biodiversity.org.au/… scientif… Acanthus ilici… <scientific><name… #>  5 https://id.biodiversity.org.au/… scientif… Acanthus volub… <scientific><name… #>  6 https://id.biodiversity.org.au/… scientif… Asystasia chel… <scientific><name… #>  7 https://id.biodiversity.org.au/… phrase-n… Asystasia sp. … <scientific><name… #>  8 https://id.biodiversity.org.au/… scientif… Avicennia alba… <scientific><name… #>  9 https://id.biodiversity.org.au/… scientif… Avicennia alba… <scientific><name… #> 10 https://id.biodiversity.org.au/… scientif… Avicennia mind… <scientific><name… #> # ℹ 24,552 more rows #> # ℹ 44 more variables: canonical_name <chr>, canonicalNameHTML <chr>, #> #   name_element <chr>, nomenclaturalStatus <chr>, #> #   scientific_name_authorship <chr>, autonym <lgl>, hybrid <lgl>, #> #   cultivar <lgl>, formula <lgl>, scientific <lgl>, nomInval <lgl>, #> #   nomIlleg <lgl>, namePublishedIn <chr>, namePublishedInID <chr>, #> #   namePublishedInYear <dbl>, nameInstanceType <chr>, … #>  #> $`APC list (accepted)` #> # A tibble: 30,565 × 15 #>    canonical_name   scientific_name taxonomic_status taxon_ID scientific_name_ID #>    <chr>            <chr>           <chr>            <chr>    <chr>              #>  1 Cycas angulata   Cycas angulata… accepted         https:/… https://id.biodiv… #>  2 Cycas arenicola  Cycas arenicol… accepted         https:/… https://id.biodiv… #>  3 Cycas armstrong… Cycas armstron… accepted         https:/… https://id.biodiv… #>  4 Cycas arnhemica  Cycas arnhemic… accepted         https:/… https://id.biodiv… #>  5 Cycas badensis   Cycas badensis… accepted         https:/… https://id.biodiv… #>  6 Cycas basaltica  Cycas basaltic… accepted         https:/… https://id.biodiv… #>  7 Cycas brunnea    Cycas brunnea … accepted         https:/… https://id.biodiv… #>  8 Cycas cairnsiana Cycas cairnsia… accepted         https:/… https://id.biodiv… #>  9 Cycas calcicola  Cycas calcicol… accepted         https:/… https://id.biodiv… #> 10 Cycas canalis    Cycas canalis … accepted         https:/… https://id.biodiv… #> # ℹ 30,555 more rows #> # ℹ 10 more variables: accepted_name_usage_ID <chr>, name_type <chr>, #> #   taxon_rank <chr>, genus <chr>, stripped_canonical <chr>, #> #   stripped_canonical2 <chr>, stripped_scientific <chr>, binomial <chr>, #> #   trinomial <chr>, taxonomic_dataset <chr> #>  #> $`APC list (known names)` #> # A tibble: 69,850 × 15 #>    canonical_name   scientific_name taxonomic_status taxon_ID scientific_name_ID #>    <chr>            <chr>           <chr>            <chr>    <chr>              #>  1 Pterostylis cli… Pterostylis cl… alternative name https:/… https://id.biodiv… #>  2 Pterostylis cre… Pterostylis cr… alternative name https:/… https://id.biodiv… #>  3 Eucalyptus resi… Eucalyptus res… alternative name https:/… https://id.biodiv… #>  4 Macrozamia paul… Macrozamia pau… basionym         https:/… https://id.biodiv… #>  5 Lycopodium creb… Lycopodium cre… basionym         https:/… https://id.biodiv… #>  6 Lycopodium lock… Lycopodium loc… basionym         https:/… https://id.biodiv… #>  7 Aralia polaris   Aralia polaris… basionym         https:/… https://id.biodiv… #>  8 Sium nodiflorum  Sium nodifloru… basionym         https:/… https://id.biodiv… #>  9 Trachymene koch… Trachymene koc… basionym         https:/… https://id.biodiv… #> 10 Schefflera brac… Schefflera bra… basionym         https:/… https://id.biodiv… #> # ℹ 69,840 more rows #> # ℹ 10 more variables: accepted_name_usage_ID <chr>, name_type <chr>, #> #   taxon_rank <chr>, genus <chr>, stripped_canonical <chr>, #> #   stripped_canonical2 <chr>, stripped_scientific <chr>, binomial <chr>, #> #   trinomial <chr>, taxonomic_dataset <chr> #>  #> $`APNI names` #> # A tibble: 12,204 × 13 #>    canonical_name        scientific_name scientific_name_ID name_type taxon_rank #>    <chr>                 <chr>           <chr>              <chr>     <chr>      #>  1 (Eucalyptus globulus… (Eucalyptus gl… https://id.biodiv… hybrid-f… species    #>  2 (Eucalyptus globulus… (Eucalyptus gl… https://id.biodiv… hybrid-f… species    #>  3 (Eucalyptus johnston… (Eucalyptus jo… https://id.biodiv… hybrid-f… species    #>  4 (Eucalyptus johnston… (Eucalyptus jo… https://id.biodiv… hybrid-f… species    #>  5 (Eucalyptus urnigera… (Eucalyptus ur… https://id.biodiv… hybrid-f… species    #>  6 (Eucalyptus urnigera… (Eucalyptus ur… https://id.biodiv… hybrid-f… species    #>  7 Abacopteris presliana Abacopteris pr… https://id.biodiv… scientif… species    #>  8 Abarema clypearia f.… Abarema clypea… https://id.biodiv… scientif… form       #>  9 Abarema pruinosa      Abarema pruino… https://id.biodiv… scientif… species    #> 10 Abelia rupestris      Abelia rupestr… https://id.biodiv… scientif… species    #> # ℹ 12,194 more rows #> # ℹ 8 more variables: taxonomic_status <chr>, stripped_canonical <chr>, #> #   stripped_canonical2 <chr>, stripped_scientific <chr>, binomial <chr>, #> #   trinomial <chr>, genus <chr>, taxonomic_dataset <chr> #>  #> $genera_accepted #> # A tibble: 3,093 × 11 #>    canonical_name accepted_name_usage accepted_name_usage_ID     scientific_name #>    <chr>          <chr>               <chr>                      <chr>           #>  1 Cycas          Cycas L.            https://id.biodiversity.o… Cycas L.        #>  2 Bowenia        Bowenia Hook.f.     https://id.biodiversity.o… Bowenia Hook.f. #>  3 Lepidozamia    Lepidozamia Regel   https://id.biodiversity.o… Lepidozamia Re… #>  4 Macrozamia     Macrozamia Miq.     https://id.biodiversity.o… Macrozamia Miq. #>  5 Equisetum      Equisetum L.        https://id.biodiversity.o… Equisetum L.    #>  6 Isoetes        Isoetes L.          https://id.biodiversity.o… Isoetes L.      #>  7 Huperzia       Huperzia Bernh.     https://id.biodiversity.o… Huperzia Bernh. #>  8 Lycopodiella   Lycopodiella Holub  https://id.biodiversity.o… Lycopodiella H… #>  9 Lycopodium     Lycopodium L.       https://id.biodiversity.o… Lycopodium L.   #> 10 Phlegmariurus  Phlegmariurus Holub https://id.biodiversity.o… Phlegmariurus … #> # ℹ 3,083 more rows #> # ℹ 7 more variables: taxonomic_status <chr>, taxon_ID <chr>, #> #   scientific_name_ID <chr>, name_type <chr>, taxon_rank <chr>, genus <chr>, #> #   taxonomic_dataset <chr> #>  #> $genera_synonym #> # A tibble: 2,858 × 11 #>    canonical_name  accepted_name_usage accepted_name_usage_ID    scientific_name #>    <chr>           <chr>               <chr>                     <chr>           #>  1 Encephalartos   Encephalartos Lehm. https://id.biodiversity.… Encephalartos … #>  2 Encephalartus   Encephalartos Lehm. https://id.biodiversity.… Encephalartus … #>  3 Encephallartes  Encephalartos Lehm. https://id.biodiversity.… Encephallartes… #>  4 Catakidozamia   Lepidozamia Regel   https://id.biodiversity.… Catakidozamia … #>  5 Zamia           Zamia L.            https://id.biodiversity.… Zamia L.        #>  6 Calamaria       Isoetes L.          https://id.biodiversity.… Calamaria Boeh… #>  7 Lepidotis       Lycopodiella Holub  https://id.biodiversity.… Lepidotis P.Be… #>  8 Lateristachys   Lycopodiella Holub  https://id.biodiversity.… Lateristachys … #>  9 Pseudodiphasium Lycopodium L.       https://id.biodiversity.… Pseudodiphasiu… #> 10 Diphasium       Lycopodium L.       https://id.biodiversity.… Diphasium C.Pr… #> # ℹ 2,848 more rows #> # ℹ 7 more variables: taxonomic_status <chr>, taxon_ID <chr>, #> #   scientific_name_ID <chr>, name_type <chr>, taxon_rank <chr>, genus <chr>, #> #   taxonomic_dataset <chr> #>  #> $genera_APNI #> # A tibble: 1,228 × 8 #>    canonical_name scientific_name  taxonomic_status scientific_name_ID name_type #>    <chr>          <chr>            <chr>            <chr>              <chr>     #>  1 Hemiadelphis   Hemiadelphis Ne… unplaced         https://id.biodiv… scientif… #>  2 Leptosiphonium Leptosiphonium … unplaced         https://id.biodiv… scientif… #>  3 Meyenia        Meyenia Nees     unplaced         https://id.biodiv… scientif… #>  4 Simonachne     Simonachne E.J.… unplaced         https://id.biodiv… scientif… #>  5 Thyrsacanthus  Thyrsacanthus N… unplaced         https://id.biodiv… scientif… #>  6 Synarrhena     Synarrhena F.Mu… unplaced         https://id.biodiv… scientif… #>  7 Allosorus      Allosorus Bernh. unplaced         https://id.biodiv… scientif… #>  8 Austrogramme   Austrogramme E.… unplaced         https://id.biodiv… scientif… #>  9 Neurogramme    Neurogramme Die… unplaced         https://id.biodiv… scientif… #> 10 Chlamydia      Chlamydia Gaert… unplaced         https://id.biodiv… scientif… #> # ℹ 1,218 more rows #> # ℹ 3 more variables: taxon_rank <chr>, genus <chr>, taxonomic_dataset <chr> #>  #> $genera_all #> # A tibble: 7,179 × 12 #>    canonical_name accepted_name_usage accepted_name_usage_ID     scientific_name #>    <chr>          <chr>               <chr>                      <chr>           #>  1 Cycas          Cycas L.            https://id.biodiversity.o… Cycas L.        #>  2 Bowenia        Bowenia Hook.f.     https://id.biodiversity.o… Bowenia Hook.f. #>  3 Lepidozamia    Lepidozamia Regel   https://id.biodiversity.o… Lepidozamia Re… #>  4 Macrozamia     Macrozamia Miq.     https://id.biodiversity.o… Macrozamia Miq. #>  5 Equisetum      Equisetum L.        https://id.biodiversity.o… Equisetum L.    #>  6 Isoetes        Isoetes L.          https://id.biodiversity.o… Isoetes L.      #>  7 Huperzia       Huperzia Bernh.     https://id.biodiversity.o… Huperzia Bernh. #>  8 Lycopodiella   Lycopodiella Holub  https://id.biodiversity.o… Lycopodiella H… #>  9 Lycopodium     Lycopodium L.       https://id.biodiversity.o… Lycopodium L.   #> 10 Phlegmariurus  Phlegmariurus Holub https://id.biodiversity.o… Phlegmariurus … #> # ℹ 7,169 more rows #> # ℹ 8 more variables: taxonomic_status <chr>, taxon_ID <chr>, #> #   scientific_name_ID <chr>, name_type <chr>, taxon_rank <chr>, genus <chr>, #> #   taxonomic_dataset <chr>, cleaned_name <chr> #>  #> $family_accepted #> # A tibble: 307 × 38 #>    taxon_ID                 name_type accepted_name_usage_ID accepted_name_usage #>    <chr>                    <chr>     <chr>                  <chr>               #>  1 https://id.biodiversity… scientif… https://id.biodiversi… Cycadaceae Pers.    #>  2 https://id.biodiversity… scientif… https://id.biodiversi… Zamiaceae Horan.    #>  3 https://id.biodiversity… scientif… https://id.biodiversi… Equisetaceae Michx… #>  4 https://id.biodiversity… scientif… https://id.biodiversi… Isoetaceae Rchb.    #>  5 https://id.biodiversity… scientif… https://id.biodiversi… Lycopodiaceae P.Be… #>  6 https://id.biodiversity… scientif… https://id.biodiversi… Selaginellaceae Wi… #>  7 https://id.biodiversity… scientif… https://id.biodiversi… Apiaceae Lindl.     #>  8 https://id.biodiversity… scientif… https://id.biodiversi… Araliaceae Juss.    #>  9 https://id.biodiversity… scientif… https://id.biodiversi… Griseliniaceae J.R… #> 10 https://id.biodiversity… scientif… https://id.biodiversi… Myodocarpaceae Dow… #> # ℹ 297 more rows #> # ℹ 34 more variables: nomenclaturalStatus <chr>, nomIlleg <chr>, #> #   nomInval <chr>, taxonomic_status <chr>, pro_parte <lgl>, #> #   scientific_name <chr>, scientific_name_ID <chr>, canonical_name <chr>, #> #   scientific_name_authorship <chr>, parentNameUsageID <chr>, #> #   taxon_rank <chr>, taxon_rank_sort_order <dbl>, kingdom <chr>, class <chr>, #> #   subclass <chr>, family <chr>, taxonConceptID <chr>, … #>  #> $family_synonym #> # A tibble: 244 × 11 #>    canonical_name    accepted_name_usage  accepted_name_usage_ID scientific_name #>    <chr>             <chr>                <chr>                  <chr>           #>  1 Boweniaceae       Zamiaceae Horan.     https://id.biodiversi… Boweniaceae D.… #>  2 Lycopodia         Lycopodiaceae P.Bea… https://id.biodiversi… Lycopodia Mirb. #>  3 Umbelliferae      Apiaceae Lindl.      https://id.biodiversi… Umbelliferae J… #>  4 Araliae           Araliaceae Juss.     https://id.biodiversi… Araliae Juss.   #>  5 Griselineae       Griseliniaceae J.R.… https://id.biodiversi… Griselineae A.… #>  6 Pittosporeae      Pittosporaceae R.Br. https://id.biodiversi… Pittosporeae R… #>  7 Cardiopterideae   Cardiopteridaceae B… https://id.biodiversi… Cardiopteridea… #>  8 Quintiniaceae     Paracryphiaceae Air… https://id.biodiversi… Quintiniaceae … #>  9 Sphenostemonaceae Paracryphiaceae Air… https://id.biodiversi… Sphenostemonac… #> 10 Astereae          Asteraceae Bercht. … https://id.biodiversi… Astereae Berch… #> # ℹ 234 more rows #> # ℹ 7 more variables: taxonomic_status <chr>, taxon_ID <chr>, #> #   scientific_name_ID <chr>, name_type <chr>, taxon_rank <chr>, genus <chr>, #> #   taxonomic_dataset <chr> #>"},{"path":"https://traitecoevo.github.io/APCalign/reference/native_anywhere_in_australia.html","id":null,"dir":"Reference","previous_headings":"","what":"Native anywhere in Australia — native_anywhere_in_australia","title":"Native anywhere in Australia — native_anywhere_in_australia","text":"function checks species list thought native anywhere Australia according APC.","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/native_anywhere_in_australia.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Native anywhere in Australia — native_anywhere_in_australia","text":"","code":"native_anywhere_in_australia(species, resources = load_taxonomic_resources())"},{"path":"https://traitecoevo.github.io/APCalign/reference/native_anywhere_in_australia.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Native anywhere in Australia — native_anywhere_in_australia","text":"species character string typically representing binomial species. resources optional list taxonomic resources use lookup. provided, function load default taxonomic resources using load_taxonomic_resources() function.","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/native_anywhere_in_australia.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Native anywhere in Australia — native_anywhere_in_australia","text":"tibble two columns: species, unique values input species, native_anywhere_in_aus, vector indicating whether species native anywhere Australia, introduced humans elsewhere, unknown respect APC resource.","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/native_anywhere_in_australia.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Native anywhere in Australia — native_anywhere_in_australia","text":"Important caveats: function detect within-Australia introductions, e.g. species Western Australia invasive east coast. recent invasions unlikely documented yet APC. Ideally check spelling taxonomy updates first via create_taxonomic_update_lookup. complete matrix species states also represents within-Australia invasions, use create_species_state_origin_matrix.","code":""},{"path":[]},{"path":"https://traitecoevo.github.io/APCalign/reference/native_anywhere_in_australia.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Native anywhere in Australia — native_anywhere_in_australia","text":"","code":"native_anywhere_in_australia(c(\"Eucalyptus globulus\",\"Pinus radiata\",\"Banksis notaspecies\")) #>  #> Loading resources into memory... #>  =========================== ===================================================== ================================================================================ #> ...done #> Warning: At least one input not found in APC; make sure inputs are at the species level and consider using `create_taxonomic_update_lookup` first. #> # A tibble: 3 × 2 #>   species             native_anywhere_in_aus #>   <chr>               <chr>                  #> 1 Eucalyptus globulus native                 #> 2 Pinus radiata       introduced             #> 3 Banksis notaspecies unknown"},{"path":"https://traitecoevo.github.io/APCalign/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. dplyr %>%","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/standardise_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardise taxon names — standardise_names","title":"Standardise taxon names — standardise_names","text":"Standardises taxon names performing series text substitutions remove common inconsistencies taxonomic nomenclature. function takes character vector taxon names input returns character vector taxon names using standardised taxonomic syntax output.","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/standardise_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standardise taxon names — standardise_names","text":"","code":"standardise_names(taxon_names)"},{"path":"https://traitecoevo.github.io/APCalign/reference/standardise_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standardise taxon names — standardise_names","text":"taxon_names character vector taxon names need standardised.","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/standardise_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standardise taxon names — standardise_names","text":"character vector standardised taxon names.","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/standardise_names.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Standardise taxon names — standardise_names","text":"removes stray punctuation start end character string. standardises unusual characters symbols ASCII equivalents. standardises taxon rank abbreviations qualifiers (subsp., var., f.), people use many variants terms. standardises removes additional filler words used within taxon names (affinis becomes aff.; s.l. s.s. removed).","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/standardise_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Standardise taxon names — standardise_names","text":"","code":"standardise_names(c(\"Quercus suber\",                     \"Eucalyptus sp.\",                     \"Eucalyptus spp.\",                     \"Agave americana var. marginata\",                     \"Agave americana v marginata\",                     \"Notelaea longifolia forma longifolia\",                     \"Notelaea longifolia f longifolia\")) #> [1] \"Quercus suber\"                     \"Eucalyptus sp.\"                    #> [3] \"Eucalyptus sp.\"                    \"Agave americana var. marginata\"    #> [5] \"Agave americana var. marginata\"    \"Notelaea longifolia f. longifolia\" #> [7] \"Notelaea longifolia f. longifolia\""},{"path":"https://traitecoevo.github.io/APCalign/reference/standardise_taxon_rank.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardise taxon ranks — standardise_taxon_rank","title":"Standardise taxon ranks — standardise_taxon_rank","text":"Standardise taxon ranks Latin English.","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/standardise_taxon_rank.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standardise taxon ranks — standardise_taxon_rank","text":"","code":"standardise_taxon_rank(taxon_rank)"},{"path":"https://traitecoevo.github.io/APCalign/reference/standardise_taxon_rank.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standardise taxon ranks — standardise_taxon_rank","text":"taxon_rank character vector Latin taxon ranks.","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/standardise_taxon_rank.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standardise taxon ranks — standardise_taxon_rank","text":"character vector English taxon ranks.","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/standardise_taxon_rank.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Standardise taxon ranks — standardise_taxon_rank","text":"function takes character vector Latin taxon ranks input returns character vector taxon ranks using standardised English terms.","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/standardise_taxon_rank.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Standardise taxon ranks — standardise_taxon_rank","text":"","code":"standardise_taxon_rank(c(\"regnum\", \"kingdom\", \"classis\", \"class\")) #> [1] \"kingdom\" \"kingdom\" \"class\"   \"class\""},{"path":"https://traitecoevo.github.io/APCalign/reference/state_diversity_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"State- and territory-level diversity — state_diversity_counts","title":"State- and territory-level diversity — state_diversity_counts","text":"Australian states territories, use geographic distribution data APC calculate state-level diversity native, introduced, complicated species origins","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/state_diversity_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"State- and territory-level diversity — state_diversity_counts","text":"","code":"state_diversity_counts(state, resources = load_taxonomic_resources())"},{"path":"https://traitecoevo.github.io/APCalign/reference/state_diversity_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"State- and territory-level diversity — state_diversity_counts","text":"state character string indicating Australian state territory calculate diversity . Possible values \"NSW\", \"NT\", \"Qld\", \"WA\", \"ChI\", \"SA\", \"Vic\", \"Tas\", \"ACT\", \"NI\", \"LHI\", \"MI\", \"HI\", \"MDI\", \"CoI\", \"CSI\", \"AR\". resources taxonomic resources required make summary statistics.  loading can slow, call load_taxonomic_resources separately greatly speed function pass resources .","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/state_diversity_counts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"State- and territory-level diversity — state_diversity_counts","text":"tibble diversity counts specified state territory, including native, introduced, complicated species origins. tibble three columns: \"origin\" indicating origin species, \"state\" indicating Australian state territory, \"num_species\" indicating number species origin state.","code":""},{"path":[]},{"path":"https://traitecoevo.github.io/APCalign/reference/state_diversity_counts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"State- and territory-level diversity — state_diversity_counts","text":"","code":"state_diversity_counts(state = \"NSW\") #>  #> Loading resources into memory... #>  =========================== ===================================================== ================================================================================ #> ...done #> # A tibble: 7 × 3 #>   origin                            state num_species #>   <chr>                             <chr> <table[1d]> #> 1 doubtfully naturalised            NSW     93        #> 2 formerly naturalised              NSW      8        #> 3 native                            NSW   5968        #> 4 native and doubtfully naturalised NSW      2        #> 5 native and naturalised            NSW     34        #> 6 naturalised                       NSW   1580        #> 7 presumed extinct                  NSW      8"},{"path":"https://traitecoevo.github.io/APCalign/reference/strip_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Strip taxon names — strip_names","title":"Strip taxon names — strip_names","text":"Strip taxonomic names taxon rank abbreviations qualifiers special characters","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/strip_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Strip taxon names — strip_names","text":"","code":"strip_names(taxon_names)"},{"path":"https://traitecoevo.github.io/APCalign/reference/strip_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Strip taxon names — strip_names","text":"taxon_names character vector taxonomic names stripped.","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/strip_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Strip taxon names — strip_names","text":"character vector stripped taxonomic names, subtaxa designations, special characters, extra whitespace removed, letters converted lowercase.","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/strip_names.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Strip taxon names — strip_names","text":"Given vector taxonomic names, function removes: subtaxa designations (\"subsp.\", \"var.\", \"f.\", \"ser\") special characters (e.g., \"-\", \".\", \"(\", \")\", \"?\") extra whitespace resulting vector names also converted lowercase.","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/strip_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Strip taxon names — strip_names","text":"","code":"strip_names(c(\"Abies lasiocarpa subsp. lasiocarpa\",               \"Quercus kelloggii\",               \"Pinus contorta var. latifolia\")) #> [1] \"abies lasiocarpa lasiocarpa\" \"quercus kelloggii\"           #> [3] \"pinus contorta latifolia\""},{"path":"https://traitecoevo.github.io/APCalign/reference/strip_names_extra.html","id":null,"dir":"Reference","previous_headings":"","what":"Strip taxon names, extra — strip_names_extra","title":"Strip taxon names, extra — strip_names_extra","text":"Strip taxonomic names sp. hybrid symbols. function assumes character function already run strip_names.","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/strip_names_extra.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Strip taxon names, extra — strip_names_extra","text":"","code":"strip_names_extra(taxon_names)"},{"path":"https://traitecoevo.github.io/APCalign/reference/strip_names_extra.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Strip taxon names, extra — strip_names_extra","text":"taxon_names character vector taxonomic names stripped.","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/strip_names_extra.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Strip taxon names, extra — strip_names_extra","text":"character vector stripped taxonomic names, sp. hybrid symbols removed.","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/strip_names_extra.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Strip taxon names, extra — strip_names_extra","text":"Given vector taxonomic names, function removes additional filler words (\" x \" hybrid taxa, \"sp.\") removed function strip_names","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/strip_names_extra.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Strip taxon names, extra — strip_names_extra","text":"","code":"strip_names_extra(c(\"Abies lasiocarpa subsp. lasiocarpa\",               \"Quercus kelloggii\",               \"Pinus contorta var. latifolia\",               \"Acacia sp.\",               \"Lepidium sp. Tanguin Hill (K.R.Newbey 10501)\")) #> [1] \"Abies lasiocarpa subsp. lasiocarpa\"           #> [2] \"Quercus kelloggii\"                            #> [3] \"Pinus contorta var. latifolia\"                #> [4] \"Acacia sp.\"                                   #> [5] \"Lepidium sp. Tanguin Hill (K.R.Newbey 10501)\""},{"path":"https://traitecoevo.github.io/APCalign/reference/update_taxonomy.html","id":null,"dir":"Reference","previous_headings":"","what":"Update to currently accepted APC name and add APC/APNI name metadata — update_taxonomy","title":"Update to currently accepted APC name and add APC/APNI name metadata — update_taxonomy","text":"list taxon names aligned APC, update name accepted taxon concept per APC add scientific name taxon concept metadata names aligned either APC APNI.","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/update_taxonomy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update to currently accepted APC name and add APC/APNI name metadata — update_taxonomy","text":"","code":"update_taxonomy(   aligned_data,   taxonomic_splits = \"most_likely_species\",   quiet = TRUE,   output = NULL,   resources = load_taxonomic_resources() )"},{"path":"https://traitecoevo.github.io/APCalign/reference/update_taxonomy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update to currently accepted APC name and add APC/APNI name metadata — update_taxonomy","text":"aligned_data tibble plant names update. table must include 5 columns, original_name, aligned_name, taxon_rank, taxonomic_dataset, aligned_reason. columns created function align_taxa. columns original_name aligned_name must format scientific name, genus species, may contain additional qualifiers subspecies varieties. names case insensitive. taxonomic_splits Variable determines protocol use update taxon names ambiguous due taxonomic splits. three options : most_likely_species, returns species name use split; alternative names returned separate column return_all, returns possible names collapse_to_higher_taxon, declares ambiguous name aligned accepted species/infraspecific name name demoted genus rank quiet Logical indicate whether display messages updating taxa. output (optional) Name file results saved. default NULL file created. specified, output saved CSV file given name. resources taxonomic resources required make summary statistics.  Loading can slow, call load_taxonomic_resources separately greatly speed function pass resources .","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/update_taxonomy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update to currently accepted APC name and add APC/APNI name metadata — update_taxonomy","text":"tibble updated taxonomy specified plant names. tibble contains following columns: original_name: original plant name. aligned_name: input plant name aligned taxon name APC APNI align_taxa function. accepted_name: APC-accepted plant name, available. suggested_name: suggested plant name use. Identical accepted_name, accepted_name exists; otherwise suggested_name aligned_name. genus: genus accepted (suggested) name; APC-accepted genus names filled . family: family accepted (suggested) name; APC-accepted family names filled . taxon_rank: taxonomic rank suggested (accepted) name. taxonomic_dataset: source suggested (accepted) names (APC APNI). taxonomic_status: taxonomic status suggested (accepted) name. taxonomic_status_aligned: taxonomic status aligned name, taxonomic updates applied. aligned_reason: explanation specific taxon name alignment (original name aligned name). update_reason: explanation specific taxon name update (aligned name accepted suggested name). subclass: subclass accepted name. taxon_distribution: distribution accepted name; filled APC accepted_name available. scientific_name_authorship: authorship information accepted (synonymous) name; available APC APNI names. taxon_ID: unique taxon concept identifier accepted_name; filled APC accepted_name available. taxon_ID_genus: identifier genus; filled APC-accepted genus name available. scientific_name_ID: identifier nomenclatural (taxonomic) details scientific name; available APC APNI names. row_number: row number specific original_name input. number_of_collapsed_taxa: taxonomic_splits == \"collapse_to_higher_taxon\", number possible taxon names collapsed.","code":""},{"path":"https://traitecoevo.github.io/APCalign/reference/update_taxonomy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update to currently accepted APC name and add APC/APNI name metadata — update_taxonomy","text":"function uses APC update taxonomy names aligned taxon concept listed APC currently accepted name taxon concept. aligned_data data frame input must contain 5 columns, original_name, aligned_name, taxon_rank, taxonomic_dataset, aligned_reason. (columns output function align_taxa.) aligned name plant name aligned taxon name APC APNI align_taxa function. Notes: input function table 5 columns (output align_taxa), function used explicitly want separate alignment updating components APCalign. function second half create_taxonomic_update_lookup.","code":""},{"path":[]},{"path":"https://traitecoevo.github.io/APCalign/reference/update_taxonomy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update to currently accepted APC name and add APC/APNI name metadata — update_taxonomy","text":"","code":"# Update taxonomy for two plant names and print the result # \\donttest{ resources <- load_taxonomic_resources() #>  #> Loading resources into memory... #>  =========================== ===================================================== ================================================================================ #> ...done  update_taxonomy(  dplyr::tibble(    original_name = c(\"Dryandra preissii\", \"Banksia acuminata\"),    aligned_name = c(\"Dryandra preissii\", \"Banksia acuminata\"),    taxon_rank = c(\"species\", \"species\"),    taxonomic_dataset = c(\"APC\", \"APC\"),    aligned_reason = c(NA_character_,    NA_character_)  ),  resources = resources ) #> # A tibble: 2 × 21 #>   original_name     aligned_name      accepted_name  suggested_name genus family #>   <chr>             <chr>             <chr>          <chr>          <chr> <chr>  #> 1 Dryandra preissii Dryandra preissii Banksia acumi… Banksia acumi… Bank… Prote… #> 2 Banksia acuminata Banksia acuminata Banksia acumi… Banksia acumi… Bank… Prote… #> # ℹ 15 more variables: taxon_rank <chr>, taxonomic_dataset <chr>, #> #   taxonomic_status <chr>, taxonomic_status_aligned <chr>, #> #   aligned_reason <chr>, update_reason <chr>, subclass <chr>, #> #   taxon_distribution <chr>, scientific_name <chr>, taxon_ID <chr>, #> #   taxon_ID_genus <chr>, scientific_name_ID <chr>, canonical_name <chr>, #> #   row_number <dbl>, number_of_collapsed_taxa <dbl> # }"},{"path":"https://traitecoevo.github.io/APCalign/news/index.html","id":"apcalign-112","dir":"Changelog","previous_headings":"","what":"APCalign 1.1.2","title":"APCalign 1.1.2","text":"Added get_versions() Create genus->family lookup specified APC release","code":""},{"path":"https://traitecoevo.github.io/APCalign/news/index.html","id":"apcalign-102","dir":"Changelog","previous_headings":"","what":"APCalign 1.0.2","title":"APCalign 1.0.2","text":"CRAN release: 2024-08-17 Minor update fix Deal vignette issues emerged CRAN Improve “graceful failing”, based issues come github CI minor formatting","code":""},{"path":"https://traitecoevo.github.io/APCalign/news/index.html","id":"apcalign-101","dir":"Changelog","previous_headings":"","what":"APCalign 1.0.1","title":"APCalign 1.0.1","text":"CRAN release: 2024-05-30 First major release APCalign. preprint available https://www.biorxiv.org/content/10.1101/2024.02.02.578715v1. Article accepted publication Australian journal Botany. Following review, number changes implemented. sped & streamlined package. Update function documentation Speed extract_genus Write replacement function stringr::word much faster. Restricting reference list names first letter input string. Switch using utils::adist stringdist::stringdist(method = \"dl\") Rework standardise_names remove punctuation start string Rework strip_names_extra (previously strip_names_2) just perform additional functions strip_names, rather repeating performed strip_names. Avoid importing entire packages using package::function format throughout removing functions @import Add fuzzy match arguments create_taxonomic_update_lookup Add 3 additional family-level APC matches match_taxa. Refine tests Make messages console optional Fix issue fails github (https://github.com/traitecoevo/APCalign/issues/205) Update installation instructions Added cite version APCalign article Exported default_version Add citing method R package Update GitHub Actions Improved family alignments Added standardise_taxon_rank Improved messaging alignment","code":""}]
